# ------------------------------------------------------------------------
# OWASP ModSecurity Core Rule Set ver.4.0.0-rc1
# Copyright (c) 2006-2020 Trustwave and contributors. All rights reserved.
# Copyright (c) 2021-2022 Core Rule Set project. All rights reserved.
#
# The OWASP ModSecurity Core Rule Set is distributed under
# Apache Software License (ASL) version 2
# Please see the enclosed LICENSE file for full details.
# ------------------------------------------------------------------------

#
# -= Paranoia Level 0 (empty) =- (apply unconditionally)
#



SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 1" "id:932011,phase:1,pass,nolog,skipAfter:END-REQUEST-932-APPLICATION-ATTACK-RCE"
SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 1" "id:932012,phase:2,pass,nolog,skipAfter:END-REQUEST-932-APPLICATION-ATTACK-RCE"
#
# -= Paranoia Level 1 (default) =- (apply only when tx.detection_paranoia_level is sufficiently high: 1 or higher)
#


# [ Unix command injection ]
#
# This rule detects Unix command injections.
# A command injection takes a form such as:
#
#   foo.jpg;uname -a
#   foo.jpg||uname -a
#
# The vulnerability exists when an application executes a shell command
# without proper input escaping/validation.
#
# This rule is also triggered by an Oracle WebLogic Remote Command Execution exploit:
# [ Oracle WebLogic vulnerability CVE-2017-10271 - Exploit tested: https://www.exploit-db.com/exploits/43458 ]
#
# To prevent false positives, we look for a 'starting sequence' that
# precedes a command in shell syntax, such as: ; | & $( ` <( >(
# Anatomy of the regexp with examples of patterns caught:
#
# 1. Starting tokens
#
# ;        ;ifconfig
# \{       {ifconfig}
# \|       |ifconfig
# \|\|     ||ifconfig
# &        &ifconfig
# &&       &&ifconfig
# \n       ;\nifconfig
# \r       ;\rifconfig
# \$\(     $(ifconfig)
# \$\(\(   $((ifconfig))
# `        `ifconfig`
# \${      ${ifconfig}
# <\(      <( ifconfig )
# >\(      >( ifconfig )
# \(\s*\)  a() ( ifconfig; ); a
#
# 2. Command prefixes
#
# {        { ifconfig }
# \s*\(\s* ( ifconfig )
# \w+=(?:[^\s]*|\$.*|\$.*|<.*|>.*|\'.*\'|\".*\")\s+   VARNAME=xyz ifconfig
# !\s*     ! ifconfig
# \$       $ifconfig
#
# 3. Quoting
#
# '        'ifconfig'
# \"       "ifconfig"
#
# 4. Paths
#
# [\?\*\[\]\(\)\-\|+\w'\"\./\x5c]+/   /sbin/ifconfig, /s?in/./ifconfig, /s[a-b]in/ifconfig etc.
#
# This rule is case-sensitive to prevent FP ("Cat" vs. "cat").
#
# An effort was made to combat evasions by shell quoting (e.g. 'ls',
# 'l'"s", \l\s are all valid). ModSecurity has a t:cmdLine
# transformation built-in to deal with this, but unfortunately, it
# replaces ';' characters and lowercases the payload, which is less
# useful for this case. However, emulating the transformation makes
# the regexp more complex.
#
# Regular expression generated from util/regexp-assemble/data/932100.data.
# To update the regular expression run the following shell script
# (consult util/regexp-assemble/README.md for details):
#   util/regexp-assemble/regexp-assemble.py update 932100
#
# This is the base Rule to prevent Unix Command Injection
# Please refer other rules 932105,932106,932101 to know more.
#
#  .932100 (base rule, PL1)
#  ├── 932101 (stricter sibling of base rule containing the source-shortcut ".", PL2)
#  ├── 932105 (2nd part of base rule, PL1)
#  ├── 932106 (stricter sibling of base rule, PL3
#
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "@rx (?:[;\n\r`]|\$(?:\(?\(|{)|(?:\|)?\||\(\s*\)|[<>]\(|&?&|\{)\s*(?:(?:\w+=(?:[^\s]*|\$.*|\$.*|<.*|>.*|\'.*\'|\".*\")\s+|(?:\s*\(|!)\s*|\{|\$))*\s*(?:['\"])*(?:[\?\*\[\]\(\)\-\|+\w'\"\./\x5c]+/)?[\x5c'\"]*(?:l[\x5c'\"]*(?:w[\x5c'\"]*p[\x5c'\"]*-[\x5c'\"]*(?:d[\x5c'\"]*(?:o[\x5c'\"]*w[\x5c'\"]*n[\x5c'\"]*l[\x5c'\"]*o[\x5c'\"]*a[\x5c'\"]*d|u[\x5c'\"]*m[\x5c'\"]*p)|r[\x5c'\"]*e[\x5c'\"]*q[\x5c'\"]*u[\x5c'\"]*e[\x5c'\"]*s[\x5c'\"]*t|m[\x5c'\"]*i[\x5c'\"]*r[\x5c'\"]*r[\x5c'\"]*o[\x5c'\"]*r)|s(?:[\x5c'\"]*(?:b[\x5c'\"]*_[\x5c'\"]*r[\x5c'\"]*e[\x5c'\"]*l[\x5c'\"]*e[\x5c'\"]*a[\x5c'\"]*s[\x5c'\"]*e|c[\x5c'\"]*p[\x5c'\"]*u|m[\x5c'\"]*o[\x5c'\"]*d|p[\x5c'\"]*c[\x5c'\"]*i|u[\x5c'\"]*s[\x5c'\"]*b|-[\x5c'\"]*F|h[\x5c'\"]*w|o[\x5c'\"]*f))?|z[\x5c'\"]*(?:(?:[ef][\x5c'\"]*)?g[\x5c'\"]*r[\x5c'\"]*e[\x5c'\"]*p|c[\x5c'\"]*(?:a[\x5c'\"]*t|m[\x5c'\"]*p)|m[\x5c'\"]*(?:o[\x5c'\"]*r[\x5c'\"]*e|a)|d[\x5c'\"]*i[\x5c'\"]*f[\x5c'\"]*f|l[\x5c'\"]*e[\x5c'\"]*s[\x5c'\"]*s)|o[\x5c'\"]*(?:g[\x5c'\"]*(?:(?:n[\x5c'\"]*a[\x5c'\"]*m|s[\x5c'\"]*a[\x5c'\"]*v)[\x5c'\"]*e|i[\x5c'\"]*n[\x5c'\"]*c[\x5c'\"]*t[\x5c'\"]*l)|c[\x5c'\"]*a[\x5c'\"]*(?:t[\x5c'\"]*e|l)[\x5c'\"]*(?:\s|<|>).*)|e[\x5c'\"]*s[\x5c'\"]*s[\x5c'\"]*(?:(?:f[\x5c'\"]*i[\x5c'\"]*l|p[\x5c'\"]*i[\x5c'\"]*p)[\x5c'\"]*e|e[\x5c'\"]*c[\x5c'\"]*h[\x5c'\"]*o|(?:\s|<|>).*)|a[\x5c'\"]*s[\x5c'\"]*t[\x5c'\"]*(?:l[\x5c'\"]*o[\x5c'\"]*g(?:[\x5c'\"]*i[\x5c'\"]*n)?|c[\x5c'\"]*o[\x5c'\"]*m[\x5c'\"]*m|(?:\s|<|>).*)|d[\x5c'\"]*(?:c[\x5c'\"]*o[\x5c'\"]*n[\x5c'\"]*f[\x5c'\"]*i[\x5c'\"]*g|d[\x5c'\"]*(?:\s|<|>).*)|(?:[np]|i[\x5c'\"]*n[\x5c'\"]*k[\x5c'\"]*s|y[\x5c'\"]*n[\x5c'\"]*x)[\x5c'\"]*(?:\s|<|>).*|u[\x5c'\"]*a[\x5c'\"]*(?:5[\x5c'\"]*\.[\x5c'\"]*[1234]|(?:\s|<|>).*)|f[\x5c'\"]*t[\x5c'\"]*p(?:[\x5c'\"]*g[\x5c'\"]*e[\x5c'\"]*t)?|t[\x5c'\"]*r[\x5c'\"]*a[\x5c'\"]*c[\x5c'\"]*e)|c[\x5c'\"]*(?:o[\x5c'\"]*(?:m[\x5c'\"]*(?:p[\x5c'\"]*(?:r[\x5c'\"]*e[\x5c'\"]*s[\x5c'\"]*s[\x5c'\"]*(?:\s|<|>).*|o[\x5c'\"]*s[\x5c'\"]*e[\x5c'\"]*r)|m[\x5c'\"]*a[\x5c'\"]*n[\x5c'\"]*d[\x5c'\"]*(?:\s|<|>).*)|p[\x5c'\"]*r[\x5c'\"]*o[\x5c'\"]*c)|h[\x5c'\"]*(?:d[\x5c'\"]*i[\x5c'\"]*r[\x5c'\"]*(?:\s|<|>).*|f[\x5c'\"]*l[\x5c'\"]*a[\x5c'\"]*g[\x5c'\"]*s|a[\x5c'\"]*t[\x5c'\"]*t[\x5c'\"]*r|m[\x5c'\"]*o[\x5c'\"]*d)|p[\x5c'\"]*(?:u[\x5c'\"]*l[\x5c'\"]*i[\x5c'\"]*m[\x5c'\"]*i[\x5c'\"]*t|(?:\s|<|>).*|a[\x5c'\"]*n|i[\x5c'\"]*o)|(?:a[\x5c'\"]*(?:p[\x5c'\"]*s[\x5c'\"]*h|t)|c)[\x5c'\"]*(?:\s|<|>).*|e[\x5c'\"]*r[\x5c'\"]*t[\x5c'\"]*b[\x5c'\"]*o[\x5c'\"]*t|r[\x5c'\"]*o[\x5c'\"]*n[\x5c'\"]*t[\x5c'\"]*a[\x5c'\"]*b|u[\x5c'\"]*r[\x5c'\"]*l|[89][\x5c'\"]*9|s[\x5c'\"]*h)|b[\x5c'\"]*(?:z[\x5c'\"]*(?:(?:[ef][\x5c'\"]*)?g[\x5c'\"]*r[\x5c'\"]*e[\x5c'\"]*p|d[\x5c'\"]*i[\x5c'\"]*f[\x5c'\"]*f|l[\x5c'\"]*e[\x5c'\"]*s[\x5c'\"]*s|m[\x5c'\"]*o[\x5c'\"]*r[\x5c'\"]*e|c[\x5c'\"]*a[\x5c'\"]*t|i[\x5c'\"]*p[\x5c'\"]*2)|u[\x5c'\"]*(?:s[\x5c'\"]*(?:y[\x5c'\"]*b[\x5c'\"]*o[\x5c'\"]*x|c[\x5c'\"]*t[\x5c'\"]*l)|n[\x5c'\"]*d[\x5c'\"]*l[\x5c'\"]*e[\x5c'\"]*r[\x5c'\"]*(?:\s|<|>).*|i[\x5c'\"]*l[\x5c'\"]*t[\x5c'\"]*i[\x5c'\"]*n)|s[\x5c'\"]*d[\x5c'\"]*(?:c[\x5c'\"]*a[\x5c'\"]*t|i[\x5c'\"]*f[\x5c'\"]*f|t[\x5c'\"]*a[\x5c'\"]*r)|a[\x5c'\"]*(?:t[\x5c'\"]*c[\x5c'\"]*h[\x5c'\"]*(?:\s|<|>).*|s[\x5c'\"]*h)|r[\x5c'\"]*e[\x5c'\"]*a[\x5c'\"]*k[\x5c'\"]*s[\x5c'\"]*w)|e[\x5c'\"]*(?:x[\x5c'\"]*(?:p[\x5c'\"]*(?:e[\x5c'\"]*c[\x5c'\"]*t[\x5c'\"]*(?:\s|<|>).*|a[\x5c'\"]*n[\x5c'\"]*d|o[\x5c'\"]*r[\x5c'\"]*t|r)|(?:e[\x5c'\"]*c[\x5c'\"]*)?(?:\s|<|>).*)|n[\x5c'\"]*(?:v(?:[\x5c'\"]*-[\x5c'\"]*u[\x5c'\"]*p[\x5c'\"]*d[\x5c'\"]*a[\x5c'\"]*t[\x5c'\"]*e)?|d[\x5c'\"]*(?:i[\x5c'\"]*f|s[\x5c'\"]*w))|(?:a[\x5c'\"]*s[\x5c'\"]*y[\x5c'\"]*_[\x5c'\"]*i[\x5c'\"]*n[\x5c'\"]*s[\x5c'\"]*t[\x5c'\"]*a[\x5c'\"]*l|v[\x5c'\"]*a)[\x5c'\"]*l|(?:c[\x5c'\"]*h[\x5c'\"]*o|d)[\x5c'\"]*(?:\s|<|>).*|g[\x5c'\"]*r[\x5c'\"]*e[\x5c'\"]*p|m[\x5c'\"]*a[\x5c'\"]*c[\x5c'\"]*s|s[\x5c'\"]*a[\x5c'\"]*c)|f[\x5c'\"]*(?:i(?:[\x5c'\"]*(?:l[\x5c'\"]*e[\x5c'\"]*(?:t[\x5c'\"]*e[\x5c'\"]*s[\x5c'\"]*t|(?:\s|<|>).*)|n[\x5c'\"]*d[\x5c'\"]*(?:\s|<|>).*|s[\x5c'\"]*h))?|t[\x5c'\"]*p[\x5c'\"]*(?:s[\x5c'\"]*t[\x5c'\"]*a[\x5c'\"]*t[\x5c'\"]*s|w[\x5c'\"]*h[\x5c'\"]*o|(?:\s|<|>).*)|(?:e[\x5c'\"]*t[\x5c'\"]*c[\x5c'\"]*h|l[\x5c'\"]*o[\x5c'\"]*c[\x5c'\"]*k|c)[\x5c'\"]*(?:\s|<|>).*|u[\x5c'\"]*n[\x5c'\"]*c[\x5c'\"]*t[\x5c'\"]*i[\x5c'\"]*o[\x5c'\"]*n|o[\x5c'\"]*r[\x5c'\"]*e[\x5c'\"]*a[\x5c'\"]*c[\x5c'\"]*h|g[\x5c'\"]*r[\x5c'\"]*e[\x5c'\"]*p)|i[\x5c'\"]*(?:p[\x5c'\"]*(?:(?:6[\x5c'\"]*)?t[\x5c'\"]*a[\x5c'\"]*b[\x5c'\"]*l[\x5c'\"]*e[\x5c'\"]*s|c[\x5c'\"]*o[\x5c'\"]*n[\x5c'\"]*f[\x5c'\"]*i[\x5c'\"]*g)|r[\x5c'\"]*b(?:[\x5c'\"]*(?:2[\x5c'\"]*[01234567]|1(?:[\x5c'\"]*[89])?|3[\x5c'\"]*0))?|f[\x5c'\"]*c[\x5c'\"]*o[\x5c'\"]*n[\x5c'\"]*f[\x5c'\"]*i[\x5c'\"]*g|o[\x5c'\"]*n[\x5c'\"]*i[\x5c'\"]*c[\x5c'\"]*e|d[\x5c'\"]*(?:\s|<|>).*)|h[\x5c'\"]*(?:t[\x5c'\"]*(?:d[\x5c'\"]*i[\x5c'\"]*g[\x5c'\"]*e[\x5c'\"]*s[\x5c'\"]*t|p[\x5c'\"]*a[\x5c'\"]*s[\x5c'\"]*s[\x5c'\"]*w[\x5c'\"]*d)|o[\x5c'\"]*s[\x5c'\"]*t[\x5c'\"]*(?:n[\x5c'\"]*a[\x5c'\"]*m[\x5c'\"]*e|i[\x5c'\"]*d)|(?:e[\x5c'\"]*a[\x5c'\"]*d|u[\x5c'\"]*p)[\x5c'\"]*(?:\s|<|>).*|i[\x5c'\"]*s[\x5c'\"]*t[\x5c'\"]*o[\x5c'\"]*r[\x5c'\"]*y)|a[\x5c'\"]*(?:l[\x5c'\"]*(?:i[\x5c'\"]*a[\x5c'\"]*s[\x5c'\"]*(?:\s|<|>).*|p[\x5c'\"]*i[\x5c'\"]*n[\x5c'\"]*e)|p[\x5c'\"]*t[\x5c'\"]*(?:-[\x5c'\"]*g[\x5c'\"]*e[\x5c'\"]*t|(?:\s|<|>).*)|d[\x5c'\"]*d[\x5c'\"]*u[\x5c'\"]*s[\x5c'\"]*e[\x5c'\"]*r|r[\x5c'\"]*(?:c[\x5c'\"]*h[\x5c'\"]*(?:\s|<|>).*|p)|(?:w[\x5c'\"]*[ks]|t)[\x5c'\"]*(?:\s|<|>).*)|g[\x5c'\"]*(?:(?:e[\x5c'\"]*(?:t[\x5c'\"]*f[\x5c'\"]*a[\x5c'\"]*c[\x5c'\"]*l|m)|r[\x5c'\"]*e[\x5c'\"]*p|o)[\x5c'\"]*(?:\s|<|>).*|z[\x5c'\"]*(?:c[\x5c'\"]*a[\x5c'\"]*t|i[\x5c'\"]*p)|u[\x5c'\"]*n[\x5c'\"]*z[\x5c'\"]*i[\x5c'\"]*p|c[\x5c'\"]*c(?:[\x5c'\"]*(?:\s|<|>).*)?|i[\x5c'\"]*t(?:[\x5c'\"]*(?:\s|<|>).*)?|d[\x5c'\"]*b)|d[\x5c'\"]*(?:h[\x5c'\"]*c[\x5c'\"]*l[\x5c'\"]*i[\x5c'\"]*e[\x5c'\"]*n[\x5c'\"]*t|(?:i[\x5c'\"]*f[\x5c'\"]*f|u)[\x5c'\"]*(?:\s|<|>).*|(?:m[\x5c'\"]*e[\x5c'\"]*s|p[\x5c'\"]*k)[\x5c'\"]*g|o[\x5c'\"]*(?:a[\x5c'\"]*s|n[\x5c'\"]*e)|a[\x5c'\"]*s[\x5c'\"]*h)|j[\x5c'\"]*(?:o[\x5c'\"]*(?:u[\x5c'\"]*r[\x5c'\"]*n[\x5c'\"]*a[\x5c'\"]*l[\x5c'\"]*c[\x5c'\"]*t[\x5c'\"]*l|b[\x5c'\"]*s[\x5c'\"]*(?:\s|<|>).*)|a[\x5c'\"]*v[\x5c'\"]*a[\x5c'\"]*(?:\s|<|>).*|e[\x5c'\"]*x[\x5c'\"]*e[\x5c'\"]*c)|k[\x5c'\"]*(?:i[\x5c'\"]*l[\x5c'\"]*l[\x5c'\"]*(?:a[\x5c'\"]*l[\x5c'\"]*l|(?:\s|<|>).*)|s[\x5c'\"]*h)|G[\x5c'\"]*E[\x5c'\"]*T[\x5c'\"]*(?:\s|<|>).*|7[\x5c'\"]*z(?:[\x5c'\"]*[ar])?)\b" \
    "id:932100,\
    phase:2,\
    block,\
    capture,\
    t:none,\
    msg:'Remote Command Execution: Unix Command Injection',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-shell',\
    tag:'platform-unix',\
    tag:'attack-rce',\
    tag:'paranoia-level/1',\
    tag:'OWASP_CRS',\
    tag:'capec/1000/152/248/88',\
    tag:'PCI/6.5.2',\
    ctl:auditLogParts=+E,\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'"

# Apache 2.2 requires configuration file lines to be under 8kB.
# Therefore, some remaining commands have been split off to a separate rule.
# For explanation of this rule, see rule 932100.
#
# Regular expression generated from util/regexp-assemble/data/932105.data.
# To update the regular expression run the following shell script
# (consult util/regexp-assemble/README.md for details):
#   util/regexp-assemble/regexp-assemble.py update 932105
#
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "@rx (?:[;\n\r`]|\$(?:\(?\(|{)|(?:\|)?\||\(\s*\)|[<>]\(|&?&|\{)\s*(?:(?:\w+=(?:[^\s]*|\$.*|\$.*|<.*|>.*|\'.*\'|\".*\")\s+|(?:\s*\(|!)\s*|\{|\$))*\s*(?:['\"])*(?:[\?\*\[\]\(\)\-\|+\w'\"\./\x5c]+/)?[\x5c'\"]*(?:s[\x5c'\"]*(?:e[\x5c'\"]*(?:t[\x5c'\"]*(?:(?:f[\x5c'\"]*a[\x5c'\"]*c[\x5c'\"]*l[\x5c'\"]*)?(?:\s|<|>).*|a[\x5c'\"]*r[\x5c'\"]*c[\x5c'\"]*h|e[\x5c'\"]*n[\x5c'\"]*v|s[\x5c'\"]*i[\x5c'\"]*d)|(?:r[\x5c'\"]*v[\x5c'\"]*i[\x5c'\"]*c[\x5c'\"]*e|d)[\x5c'\"]*(?:\s|<|>).*|n[\x5c'\"]*d[\x5c'\"]*m[\x5c'\"]*a[\x5c'\"]*i[\x5c'\"]*l)|t[\x5c'\"]*(?:a[\x5c'\"]*r[\x5c'\"]*t[\x5c'\"]*-[\x5c'\"]*s[\x5c'\"]*t[\x5c'\"]*o[\x5c'\"]*p[\x5c'\"]*-[\x5c'\"]*d[\x5c'\"]*a[\x5c'\"]*e[\x5c'\"]*m[\x5c'\"]*o[\x5c'\"]*n|r[\x5c'\"]*(?:i[\x5c'\"]*n[\x5c'\"]*g[\x5c'\"]*s|a[\x5c'\"]*c[\x5c'\"]*e)|d[\x5c'\"]*b[\x5c'\"]*u[\x5c'\"]*f)|h[\x5c'\"]*(?:\.[\x5c'\"]*d[\x5c'\"]*i[\x5c'\"]*s[\x5c'\"]*t[\x5c'\"]*r[\x5c'\"]*i[\x5c'\"]*b|u[\x5c'\"]*t[\x5c'\"]*d[\x5c'\"]*o[\x5c'\"]*w[\x5c'\"]*n|(?:\s|<|>).*)|c[\x5c'\"]*(?:(?:r[\x5c'\"]*(?:e[\x5c'\"]*e[\x5c'\"]*n|i[\x5c'\"]*p[\x5c'\"]*t)|p)[\x5c'\"]*(?:\s|<|>).*|h[\x5c'\"]*e[\x5c'\"]*d)|o[\x5c'\"]*(?:(?:u[\x5c'\"]*r[\x5c'\"]*c[\x5c'\"]*e|r[\x5c'\"]*t)[\x5c'\"]*(?:\s|<|>).*|c[\x5c'\"]*a[\x5c'\"]*t)|(?:p[\x5c'\"]*l[\x5c'\"]*i[\x5c'\"]*t|g)[\x5c'\"]*(?:\s|<|>).*|q[\x5c'\"]*l[\x5c'\"]*i[\x5c'\"]*t[\x5c'\"]*e[\x5c'\"]*3|(?:l[\x5c'\"]*e[\x5c'\"]*e|f[\x5c'\"]*t)[\x5c'\"]*p|y[\x5c'\"]*s[\x5c'\"]*c[\x5c'\"]*t[\x5c'\"]*l|u[\x5c'\"]*(?:(?:\s|<|>).*|d[\x5c'\"]*o)|d[\x5c'\"]*i[\x5c'\"]*f[\x5c'\"]*f|s[\x5c'\"]*h|v[\x5c'\"]*n)|p[\x5c'\"]*(?:k[\x5c'\"]*(?:g(?:(?:[\x5c'\"]*_)?[\x5c'\"]*i[\x5c'\"]*n[\x5c'\"]*f[\x5c'\"]*o)?|e[\x5c'\"]*x[\x5c'\"]*e[\x5c'\"]*c|i[\x5c'\"]*l[\x5c'\"]*l)|i[\x5c'\"]*(?:(?:c(?:[\x5c'\"]*o)?|p)[\x5c'\"]*(?:\s|<|>).*|d[\x5c'\"]*s[\x5c'\"]*t[\x5c'\"]*a[\x5c'\"]*t|n[\x5c'\"]*g)|t[\x5c'\"]*a[\x5c'\"]*r(?:[\x5c'\"]*(?:d[\x5c'\"]*i[\x5c'\"]*f[\x5c'\"]*f|g[\x5c'\"]*r[\x5c'\"]*e[\x5c'\"]*p))?|a[\x5c'\"]*(?:t[\x5c'\"]*c[\x5c'\"]*h[\x5c'\"]*(?:\s|<|>).*|s[\x5c'\"]*s[\x5c'\"]*w[\x5c'\"]*d)|r[\x5c'\"]*i[\x5c'\"]*n[\x5c'\"]*t[\x5c'\"]*(?:e[\x5c'\"]*n[\x5c'\"]*v|f[\x5c'\"]*(?:\s|<|>).*)|y[\x5c'\"]*t[\x5c'\"]*h[\x5c'\"]*o[\x5c'\"]*n(?:[\x5c'\"]*(?:3(?:[\x5c'\"]*m)?|2))?|e[\x5c'\"]*r[\x5c'\"]*(?:l(?:[\x5c'\"]*(?:s[\x5c'\"]*h|5))?|m[\x5c'\"]*s)|(?:u[\x5c'\"]*s[\x5c'\"]*h|o[\x5c'\"]*p)[\x5c'\"]*d|f[\x5c'\"]*(?:(?:\s|<|>).*|t[\x5c'\"]*p)|g[\x5c'\"]*r[\x5c'\"]*e[\x5c'\"]*p|h[\x5c'\"]*p(?:[\x5c'\"]*[57])?|s[\x5c'\"]*(?:\s|<|>).*|d[\x5c'\"]*b)|n[\x5c'\"]*(?:c[\x5c'\"]*(?:\.[\x5c'\"]*(?:t[\x5c'\"]*r[\x5c'\"]*a[\x5c'\"]*d[\x5c'\"]*i[\x5c'\"]*t[\x5c'\"]*i[\x5c'\"]*o[\x5c'\"]*n[\x5c'\"]*a[\x5c'\"]*l|o[\x5c'\"]*p[\x5c'\"]*e[\x5c'\"]*n[\x5c'\"]*b[\x5c'\"]*s[\x5c'\"]*d)|(?:\s|<|>).*|a[\x5c'\"]*t)|e[\x5c'\"]*t[\x5c'\"]*(?:k[\x5c'\"]*i[\x5c'\"]*t[\x5c'\"]*-[\x5c'\"]*f[\x5c'\"]*t[\x5c'\"]*p|(?:s[\x5c'\"]*t|c)[\x5c'\"]*a[\x5c'\"]*t|(?:\s|<|>).*)|s[\x5c'\"]*(?:l[\x5c'\"]*o[\x5c'\"]*o[\x5c'\"]*k[\x5c'\"]*u[\x5c'\"]*p|e[\x5c'\"]*n[\x5c'\"]*t[\x5c'\"]*e[\x5c'\"]*r|t[\x5c'\"]*a[\x5c'\"]*t)|o[\x5c'\"]*(?:d[\x5c'\"]*e[\x5c'\"]*(?:\s|<|>).*|h[\x5c'\"]*u[\x5c'\"]*p)|a[\x5c'\"]*(?:n[\x5c'\"]*o[\x5c'\"]*(?:\s|<|>).*|w[\x5c'\"]*k)|p[\x5c'\"]*(?:i[\x5c'\"]*n[\x5c'\"]*g|m[\x5c'\"]*(?:\s|<|>).*)|i[\x5c'\"]*c[\x5c'\"]*e[\x5c'\"]*(?:\s|<|>).*|r[\x5c'\"]*o[\x5c'\"]*f[\x5c'\"]*f|m[\x5c'\"]*a[\x5c'\"]*p)|r[\x5c'\"]*(?:u[\x5c'\"]*(?:n[\x5c'\"]*-[\x5c'\"]*(?:m[\x5c'\"]*a[\x5c'\"]*i[\x5c'\"]*l[\x5c'\"]*c[\x5c'\"]*a[\x5c'\"]*p|p[\x5c'\"]*a[\x5c'\"]*r[\x5c'\"]*t[\x5c'\"]*s)|b[\x5c'\"]*y(?:[\x5c'\"]*(?:1(?:[\x5c'\"]*[89])?|2[\x5c'\"]*[012]))?)|e[\x5c'\"]*(?:(?:p[\x5c'\"]*(?:l[\x5c'\"]*a[\x5c'\"]*c[\x5c'\"]*e|e[\x5c'\"]*a[\x5c'\"]*t)|n[\x5c'\"]*a[\x5c'\"]*m[\x5c'\"]*e)[\x5c'\"]*(?:\s|<|>).*|a[\x5c'\"]*l[\x5c'\"]*p[\x5c'\"]*a[\x5c'\"]*t[\x5c'\"]*h)|m[\x5c'\"]*(?:(?:d[\x5c'\"]*i[\x5c'\"]*r[\x5c'\"]*)?(?:\s|<|>).*|u[\x5c'\"]*s[\x5c'\"]*e[\x5c'\"]*r)|a[\x5c'\"]*(?:k[\x5c'\"]*(?:e[\x5c'\"]*(?:\s|<|>).*|u)|r[\x5c'\"]*(?:\s|<|>).*)|(?:c[\x5c'\"]*p|p[\x5c'\"]*m)[\x5c'\"]*(?:\s|<|>).*|v[\x5c'\"]*i[\x5c'\"]*(?:e[\x5c'\"]*w|m)|n[\x5c'\"]*a[\x5c'\"]*n[\x5c'\"]*o|o[\x5c'\"]*u[\x5c'\"]*t[\x5c'\"]*e|s[\x5c'\"]*y[\x5c'\"]*n[\x5c'\"]*c)|t[\x5c'\"]*(?:c[\x5c'\"]*(?:p[\x5c'\"]*(?:t[\x5c'\"]*r[\x5c'\"]*a[\x5c'\"]*c[\x5c'\"]*e[\x5c'\"]*r[\x5c'\"]*o[\x5c'\"]*u[\x5c'\"]*t[\x5c'\"]*e|i[\x5c'\"]*n[\x5c'\"]*g)|s[\x5c'\"]*h)|i[\x5c'\"]*m[\x5c'\"]*e[\x5c'\"]*(?:d[\x5c'\"]*a[\x5c'\"]*t[\x5c'\"]*e[\x5c'\"]*c[\x5c'\"]*t[\x5c'\"]*l|o[\x5c'\"]*u[\x5c'\"]*t|(?:\s|<|>).*)|a[\x5c'\"]*(?:s[\x5c'\"]*k[\x5c'\"]*s[\x5c'\"]*e[\x5c'\"]*t|i[\x5c'\"]*l(?:[\x5c'\"]*f)?|r[\x5c'\"]*(?:\s|<|>).*)|r[\x5c'\"]*a[\x5c'\"]*c[\x5c'\"]*e[\x5c'\"]*r[\x5c'\"]*o[\x5c'\"]*u[\x5c'\"]*t[\x5c'\"]*e(?:[\x5c'\"]*6)?|e[\x5c'\"]*(?:l[\x5c'\"]*n[\x5c'\"]*e[\x5c'\"]*t|e[\x5c'\"]*(?:\s|<|>).*)|o[\x5c'\"]*(?:u[\x5c'\"]*c[\x5c'\"]*h[\x5c'\"]*(?:\s|<|>).*|p)|m[\x5c'\"]*u[\x5c'\"]*x)|m[\x5c'\"]*(?:y[\x5c'\"]*s[\x5c'\"]*q[\x5c'\"]*l(?:[\x5c'\"]*(?:d[\x5c'\"]*u[\x5c'\"]*m[\x5c'\"]*p(?:[\x5c'\"]*s[\x5c'\"]*l[\x5c'\"]*o[\x5c'\"]*w)?|h[\x5c'\"]*o[\x5c'\"]*t[\x5c'\"]*c[\x5c'\"]*o[\x5c'\"]*p[\x5c'\"]*y|a[\x5c'\"]*d[\x5c'\"]*m[\x5c'\"]*i[\x5c'\"]*n|s[\x5c'\"]*h[\x5c'\"]*o[\x5c'\"]*w))?|(?:o[\x5c'\"]*(?:u[\x5c'\"]*n[\x5c'\"]*t|r[\x5c'\"]*e)|k[\x5c'\"]*d[\x5c'\"]*i[\x5c'\"]*r|u[\x5c'\"]*t[\x5c'\"]*t|v)[\x5c'\"]*(?:\s|<|>).*|a[\x5c'\"]*(?:i[\x5c'\"]*l[\x5c'\"]*(?:x[\x5c'\"]*(?:\s|<|>).*|q)|(?:k[\x5c'\"]*e|n)[\x5c'\"]*(?:\s|<|>).*|w[\x5c'\"]*k)|l[\x5c'\"]*o[\x5c'\"]*c[\x5c'\"]*a[\x5c'\"]*t[\x5c'\"]*e)|u[\x5c'\"]*(?:n[\x5c'\"]*(?:l[\x5c'\"]*(?:i[\x5c'\"]*n[\x5c'\"]*k[\x5c'\"]*(?:\s|<|>).*|z[\x5c'\"]*m[\x5c'\"]*a)|s[\x5c'\"]*(?:h[\x5c'\"]*a[\x5c'\"]*r[\x5c'\"]*e|e[\x5c'\"]*t)[\x5c'\"]*(?:\s|<|>).*|c[\x5c'\"]*o[\x5c'\"]*m[\x5c'\"]*p[\x5c'\"]*r[\x5c'\"]*e[\x5c'\"]*s[\x5c'\"]*s|a[\x5c'\"]*m[\x5c'\"]*e|r[\x5c'\"]*a[\x5c'\"]*r|z[\x5c'\"]*i[\x5c'\"]*p|x[\x5c'\"]*z)|s[\x5c'\"]*e[\x5c'\"]*r[\x5c'\"]*(?:(?:a[\x5c'\"]*d|m[\x5c'\"]*o)[\x5c'\"]*d|d[\x5c'\"]*e[\x5c'\"]*l)|l[\x5c'\"]*i[\x5c'\"]*m[\x5c'\"]*i[\x5c'\"]*t[\x5c'\"]*(?:\s|<|>).*)|x[\x5c'\"]*(?:z[\x5c'\"]*(?:(?:[ef][\x5c'\"]*)?g[\x5c'\"]*r[\x5c'\"]*e[\x5c'\"]*p|d[\x5c'\"]*(?:i[\x5c'\"]*f[\x5c'\"]*f|e[\x5c'\"]*c)|c[\x5c'\"]*(?:a[\x5c'\"]*t|m[\x5c'\"]*p)|l[\x5c'\"]*e[\x5c'\"]*s[\x5c'\"]*s|m[\x5c'\"]*o[\x5c'\"]*r[\x5c'\"]*e|(?:\s|<|>).*)|a[\x5c'\"]*r[\x5c'\"]*g[\x5c'\"]*s|t[\x5c'\"]*e[\x5c'\"]*r[\x5c'\"]*m|x[\x5c'\"]*d[\x5c'\"]*(?:\s|<|>).*)|z[\x5c'\"]*(?:(?:[ef][\x5c'\"]*)?g[\x5c'\"]*r[\x5c'\"]*e[\x5c'\"]*p|c[\x5c'\"]*(?:a[\x5c'\"]*t|m[\x5c'\"]*p)|d[\x5c'\"]*i[\x5c'\"]*f[\x5c'\"]*f|i[\x5c'\"]*p[\x5c'\"]*(?:\s|<|>).*|l[\x5c'\"]*e[\x5c'\"]*s[\x5c'\"]*s|m[\x5c'\"]*o[\x5c'\"]*r[\x5c'\"]*e|r[\x5c'\"]*u[\x5c'\"]*n|s[\x5c'\"]*h)|w[\x5c'\"]*(?:h[\x5c'\"]*o[\x5c'\"]*(?:a[\x5c'\"]*m[\x5c'\"]*i|(?:\s|<|>).*)|a[\x5c'\"]*t[\x5c'\"]*c[\x5c'\"]*h[\x5c'\"]*(?:\s|<|>).*|g[\x5c'\"]*e[\x5c'\"]*t|3[\x5c'\"]*m)|v[\x5c'\"]*i[\x5c'\"]*(?:m[\x5c'\"]*(?:d[\x5c'\"]*i[\x5c'\"]*f[\x5c'\"]*f|(?:\s|<|>).*)|(?:e[\x5c'\"]*w[\x5c'\"]*)?(?:\s|<|>).*|g[\x5c'\"]*r|p[\x5c'\"]*w)|o[\x5c'\"]*(?:p[\x5c'\"]*e[\x5c'\"]*n[\x5c'\"]*s[\x5c'\"]*s[\x5c'\"]*l|n[\x5c'\"]*i[\x5c'\"]*n[\x5c'\"]*t[\x5c'\"]*r)|y[\x5c'\"]*u[\x5c'\"]*m)\b" \
    "id:932105,\
    phase:2,\
    block,\
    capture,\
    t:none,\
    msg:'Remote Command Execution: Unix Command Injection',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-shell',\
    tag:'platform-unix',\
    tag:'attack-rce',\
    tag:'paranoia-level/1',\
    tag:'OWASP_CRS',\
    tag:'capec/1000/152/248/88',\
    tag:'PCI/6.5.2',\
    ctl:auditLogParts=+E,\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'"


# [ Windows command injection ]
#
# This rule detects Windows shell command injections.
# If you are not running Windows, it is safe to disable this rule.
#
# A command injection takes a form such as:
#
#   foo.jpg&ver /r
#   foo.jpg|ver /r
#
# The vulnerability exists when an application executes a shell command
# without proper input escaping/validation.
#
# To prevent false positives, we look for a 'starting sequence' that
# precedes a command in CMD syntax, such as: ; | & `
#
# Anatomy of the regexp:
#
# 1. Starting tokens
#
# ;        ;cmd
# \{       {cmd
# \|       |cmd
# \|\|     ||cmd
# &        &cmd
# &&       &&cmd
# \n       \ncmd
# \r       \rcmd
# `        `cmd
#
# 2. Command prefixes
#
# (        (cmd)
# ,        ,cmd
# @        @cmd
# '        'cmd'
# "        "cmd"
# \s       spacing+cmd
#
# 3. Paths
#
# [\w'\"\./]+/                          /path/cmd
# [\x5c'\"\^]*\w[\x5c'\"\^]*:.*\x5c     C:\Program Files\cmd
# [\^\.\w '\"/\x5c]*\x5c)?[\"\^]*       \\net\share\dir\cmd
#
# 4. Quoting
#
# \"       "cmd"
# \^       ^cmd
#
# 5. Extension/switches
#
# \.[\"\^]*\w+      cmd.com, cmd.exe, etc.
# /b                cmd/h
#
# An effort is made to combat evasions by CMD syntax; for example,
# the following strings are valid: c^md, @cmd, "c"md. ModSecurity
# has a t:cmdLine transformation built-in to deal with some of these,
# but unfortunately, that transformation replaces ';' characters (so
# we cannot match on the start of a command) and '\' characters (so we
# have trouble matching paths). This makes the regexp more complex.
#
# This rule is case-insensitive.
#
# Regular expression generated from util/regexp-assemble/data/932110.data.
# To update the regular expression run the following shell script
# (consult util/regexp-assemble/README.md for details):
#   util/regexp-assemble/regexp-assemble.py update 932110
#
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "@rx (?i)(?:[;\n\r`]|(?:\|)?\||&?&|\{)\s*(?:['(,@\"\s])*(?:(?:(?:[\x5c'\"\^]*\w[\x5c'\"\^]*:.*|[\^\.\w '\"/\x5c]*)\x5c|[\w'\"\./]+\/))?[\"\^]*(?:m[\"\^]*(?:y[\"\^]*s[\"\^]*q[\"\^]*l(?:[\"\^]*(?:d[\"\^]*u[\"\^]*m[\"\^]*p(?:[\"\^]*s[\"\^]*l[\"\^]*o[\"\^]*w)?|h[\"\^]*o[\"\^]*t[\"\^]*c[\"\^]*o[\"\^]*p[\"\^]*y|a[\"\^]*d[\"\^]*m[\"\^]*i[\"\^]*n|s[\"\^]*h[\"\^]*o[\"\^]*w))?|s[\"\^]*(?:i[\"\^]*(?:n[\"\^]*f[\"\^]*o[\"\^]*3[\"\^]*2|e[\"\^]*x[\"\^]*e[\"\^]*c)|c[\"\^]*o[\"\^]*n[\"\^]*f[\"\^]*i[\"\^]*g|g[\"\^]*(?:[\s,;]|\.|/|<|>).*|h[\"\^]*t[\"\^]*a|t[\"\^]*s[\"\^]*c)|o[\"\^]*(?:u[\"\^]*n[\"\^]*t[\"\^]*(?:(?:[\s,;]|\.|/|<|>).*|v[\"\^]*o[\"\^]*l)|v[\"\^]*e[\"\^]*u[\"\^]*s[\"\^]*e[\"\^]*r|[dr][\"\^]*e[\"\^]*(?:[\s,;]|\.|/|<|>).*)|k[\"\^]*(?:d[\"\^]*i[\"\^]*r[\"\^]*(?:[\s,;]|\.|/|<|>).*|l[\"\^]*i[\"\^]*n[\"\^]*k)|d[\"\^]*(?:s[\"\^]*c[\"\^]*h[\"\^]*e[\"\^]*d|(?:[\s,;]|\.|/|<|>).*)|a[\"\^]*p[\"\^]*i[\"\^]*s[\"\^]*e[\"\^]*n[\"\^]*d|b[\"\^]*s[\"\^]*a[\"\^]*c[\"\^]*l[\"\^]*i|e[\"\^]*a[\"\^]*s[\"\^]*u[\"\^]*r[\"\^]*e|m[\"\^]*s[\"\^]*y[\"\^]*s)|d[\"\^]*(?:i[\"\^]*(?:s[\"\^]*k[\"\^]*(?:(?:m[\"\^]*g[\"\^]*m|p[\"\^]*a[\"\^]*r)[\"\^]*t|s[\"\^]*h[\"\^]*a[\"\^]*d[\"\^]*o[\"\^]*w)|r[\"\^]*(?:(?:[\s,;]|\.|/|<|>).*|u[\"\^]*s[\"\^]*e)|f[\"\^]*f[\"\^]*(?:[\s,;]|\.|/|<|>).*)|e[\"\^]*(?:l[\"\^]*(?:p[\"\^]*r[\"\^]*o[\"\^]*f|t[\"\^]*r[\"\^]*e[\"\^]*e|(?:[\s,;]|\.|/|<|>).*)|v[\"\^]*(?:m[\"\^]*g[\"\^]*m[\"\^]*t|c[\"\^]*o[\"\^]*n)|(?:f[\"\^]*r[\"\^]*a|b[\"\^]*u)[\"\^]*g)|s[\"\^]*(?:a[\"\^]*(?:c[\"\^]*l[\"\^]*s|d[\"\^]*d)|q[\"\^]*u[\"\^]*e[\"\^]*r[\"\^]*y|m[\"\^]*o[\"\^]*(?:v[\"\^]*e|d)|g[\"\^]*e[\"\^]*t|r[\"\^]*m)|(?:r[\"\^]*i[\"\^]*v[\"\^]*e[\"\^]*r[\"\^]*q[\"\^]*u[\"\^]*e[\"\^]*r|o[\"\^]*s[\"\^]*k[\"\^]*e)[\"\^]*y|(?:c[\"\^]*o[\"\^]*m[\"\^]*c[\"\^]*n[\"\^]*f|x[\"\^]*d[\"\^]*i[\"\^]*a)[\"\^]*g|a[\"\^]*t[\"\^]*e[\"\^]*(?:[\s,;]|\.|/|<|>).*|n[\"\^]*s[\"\^]*s[\"\^]*t[\"\^]*a[\"\^]*t)|c[\"\^]*(?:o[\"\^]*(?:m[\"\^]*(?:p[\"\^]*(?:(?:a[\"\^]*c[\"\^]*t[\"\^]*)?(?:[\s,;]|\.|/|<|>).*|m[\"\^]*g[\"\^]*m[\"\^]*t)|e[\"\^]*x[\"\^]*p)|n[\"\^]*(?:2[\"\^]*p|v[\"\^]*e)[\"\^]*r[\"\^]*t|p[\"\^]*y)|l[\"\^]*(?:e[\"\^]*a[\"\^]*(?:n[\"\^]*m[\"\^]*g[\"\^]*r|r[\"\^]*m[\"\^]*e[\"\^]*m)|u[\"\^]*s[\"\^]*t[\"\^]*e[\"\^]*r)|h[\"\^]*(?:k[\"\^]*(?:n[\"\^]*t[\"\^]*f[\"\^]*s|d[\"\^]*s[\"\^]*k)|d[\"\^]*i[\"\^]*r[\"\^]*(?:[\s,;]|\.|/|<|>).*)|s[\"\^]*(?:c[\"\^]*(?:r[\"\^]*i[\"\^]*p[\"\^]*t|c[\"\^]*m[\"\^]*d)|v[\"\^]*d[\"\^]*e)|e[\"\^]*r[\"\^]*t[\"\^]*(?:u[\"\^]*t[\"\^]*i[\"\^]*l|r[\"\^]*e[\"\^]*q)|a[\"\^]*(?:l[\"\^]*l[\"\^]*(?:[\s,;]|\.|/|<|>).*|c[\"\^]*l[\"\^]*s)|m[\"\^]*d(?:[\"\^]*k[\"\^]*e[\"\^]*y)?|i[\"\^]*p[\"\^]*h[\"\^]*e[\"\^]*r|u[\"\^]*r[\"\^]*l)|f[\"\^]*(?:o[\"\^]*r[\"\^]*(?:m[\"\^]*a[\"\^]*t[\"\^]*(?:[\s,;]|\.|/|<|>).*|f[\"\^]*i[\"\^]*l[\"\^]*e[\"\^]*s|e[\"\^]*a[\"\^]*c[\"\^]*h)|i[\"\^]*n[\"\^]*d[\"\^]*(?:(?:[\s,;]|\.|/|<|>).*|s[\"\^]*t[\"\^]*r)|s[\"\^]*(?:m[\"\^]*g[\"\^]*m[\"\^]*t|u[\"\^]*t[\"\^]*i[\"\^]*l)|t[\"\^]*(?:p[\"\^]*(?:[\s,;]|\.|/|<|>).*|y[\"\^]*p[\"\^]*e)|r[\"\^]*e[\"\^]*e[\"\^]*d[\"\^]*i[\"\^]*s[\"\^]*k|c[\"\^]*(?:[\s,;]|\.|/|<|>).*|g[\"\^]*r[\"\^]*e[\"\^]*p)|n[\"\^]*(?:e[\"\^]*t[\"\^]*(?:s[\"\^]*(?:t[\"\^]*a[\"\^]*t|v[\"\^]*c|h)|(?:[\s,;]|\.|/|<|>).*|c[\"\^]*a[\"\^]*t|d[\"\^]*o[\"\^]*m)|t[\"\^]*(?:b[\"\^]*a[\"\^]*c[\"\^]*k[\"\^]*u[\"\^]*p|r[\"\^]*i[\"\^]*g[\"\^]*h[\"\^]*t[\"\^]*s)|(?:s[\"\^]*l[\"\^]*o[\"\^]*o[\"\^]*k[\"\^]*u|m[\"\^]*a)[\"\^]*p|c[\"\^]*(?:(?:[\s,;]|\.|/|<|>).*|a[\"\^]*t)|b[\"\^]*t[\"\^]*s[\"\^]*t[\"\^]*a[\"\^]*t)|e[\"\^]*(?:x[\"\^]*p[\"\^]*(?:a[\"\^]*n[\"\^]*d[\"\^]*(?:[\s,;]|\.|/|<|>).*|l[\"\^]*o[\"\^]*r[\"\^]*e[\"\^]*r)|v[\"\^]*e[\"\^]*n[\"\^]*t[\"\^]*(?:c[\"\^]*r[\"\^]*e[\"\^]*a[\"\^]*t[\"\^]*e|v[\"\^]*w[\"\^]*r)|n[\"\^]*d[\"\^]*l[\"\^]*o[\"\^]*c[\"\^]*a[\"\^]*l|g[\"\^]*r[\"\^]*e[\"\^]*p|r[\"\^]*a[\"\^]*s[\"\^]*e|c[\"\^]*h[\"\^]*o)|g[\"\^]*(?:a[\"\^]*t[\"\^]*h[\"\^]*e[\"\^]*r[\"\^]*n[\"\^]*e[\"\^]*t[\"\^]*w[\"\^]*o[\"\^]*r[\"\^]*k[\"\^]*i[\"\^]*n[\"\^]*f[\"\^]*o|p[\"\^]*(?:(?:r[\"\^]*e[\"\^]*s[\"\^]*u[\"\^]*l|e[\"\^]*d[\"\^]*i)[\"\^]*t|u[\"\^]*p[\"\^]*d[\"\^]*a[\"\^]*t[\"\^]*e)|i[\"\^]*t[\"\^]*(?:[\s,;]|\.|/|<|>).*|e[\"\^]*t[\"\^]*m[\"\^]*a[\"\^]*c)|i[\"\^]*(?:r[\"\^]*b(?:[\"\^]*(?:1(?:[\"\^]*[89])?|2[\"\^]*[012]))?|f[\"\^]*m[\"\^]*e[\"\^]*m[\"\^]*b[\"\^]*e[\"\^]*r|p[\"\^]*c[\"\^]*o[\"\^]*n[\"\^]*f[\"\^]*i[\"\^]*g|n[\"\^]*e[\"\^]*t[\"\^]*c[\"\^]*p[\"\^]*l|c[\"\^]*a[\"\^]*c[\"\^]*l[\"\^]*s)|a[\"\^]*(?:d[\"\^]*(?:d[\"\^]*u[\"\^]*s[\"\^]*e[\"\^]*r[\"\^]*s|m[\"\^]*o[\"\^]*d[\"\^]*c[\"\^]*m[\"\^]*d)|r[\"\^]*p[\"\^]*(?:[\s,;]|\.|/|<|>).*|t[\"\^]*t[\"\^]*r[\"\^]*i[\"\^]*b|s[\"\^]*s[\"\^]*o[\"\^]*c|z[\"\^]*m[\"\^]*a[\"\^]*n)|l[\"\^]*(?:o[\"\^]*g[\"\^]*(?:e[\"\^]*v[\"\^]*e[\"\^]*n[\"\^]*t|t[\"\^]*i[\"\^]*m[\"\^]*e|m[\"\^]*a[\"\^]*n|o[\"\^]*f[\"\^]*f)|a[\"\^]*b[\"\^]*e[\"\^]*l[\"\^]*(?:[\s,;]|\.|/|<|>).*|u[\"\^]*s[\"\^]*r[\"\^]*m[\"\^]*g[\"\^]*r)|b[\"\^]*(?:(?:c[\"\^]*d[\"\^]*(?:b[\"\^]*o[\"\^]*o|e[\"\^]*d[\"\^]*i)|r[\"\^]*o[\"\^]*w[\"\^]*s[\"\^]*t[\"\^]*a)[\"\^]*t|i[\"\^]*t[\"\^]*s[\"\^]*a[\"\^]*d[\"\^]*m[\"\^]*i[\"\^]*n|o[\"\^]*o[\"\^]*t[\"\^]*c[\"\^]*f[\"\^]*g)|h[\"\^]*(?:o[\"\^]*s[\"\^]*t[\"\^]*n[\"\^]*a[\"\^]*m[\"\^]*e|d[\"\^]*w[\"\^]*w[\"\^]*i[\"\^]*z)|j[\"\^]*a[\"\^]*v[\"\^]*a[\"\^]*(?:[\s,;]|\.|/|<|>).*|7[\"\^]*z(?:[\"\^]*[ar])?)(?:\.[\"\^]*\w+)?\b" \
    "id:932110,\
    phase:2,\
    block,\
    capture,\
    t:none,\
    msg:'Remote Command Execution: Windows Command Injection',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-shell',\
    tag:'platform-windows',\
    tag:'attack-rce',\
    tag:'paranoia-level/1',\
    tag:'OWASP_CRS',\
    tag:'capec/1000/152/248/88',\
    tag:'PCI/6.5.2',\
    ctl:auditLogParts=+E,\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'"

# Apache 2.2 requires configuration file lines to be under 8kB.
# Therefore, some remaining commands have been split off to a separate rule.
# For explanation of this rule, see rule 932110.
#
# This rule is also triggered by an Oracle WebLogic Remote Command Execution exploit:
# [ Oracle WebLogic vulnerability CVE-2017-10271 - Exploit tested: https://www.exploit-db.com/exploits/43458 ]
#
# Regular expression generated from util/regexp-assemble/data/932115.data.
# To update the regular expression run the following shell script
# (consult util/regexp-assemble/README.md for details):
#   util/regexp-assemble/regexp-assemble.py update 932115
#
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "@rx (?i)(?:[;\n\r`]|(?:\|)?\||&?&|\{)\s*(?:['(,@\"\s])*(?:(?:(?:[\x5c'\"\^]*\w[\x5c'\"\^]*:.*|[\^\.\w '\"/\x5c]*)\x5c|[\w'\"\./]+\/))?[\"\^]*(?:s[\"\^]*(?:y[\"\^]*s[\"\^]*(?:t[\"\^]*e[\"\^]*m[\"\^]*(?:p[\"\^]*r[\"\^]*o[\"\^]*p[\"\^]*e[\"\^]*r[\"\^]*t[\"\^]*i[\"\^]*e[\"\^]*s[\"\^]*(?:d[\"\^]*a[\"\^]*t[\"\^]*a[\"\^]*e[\"\^]*x[\"\^]*e[\"\^]*c[\"\^]*u[\"\^]*t[\"\^]*i[\"\^]*o[\"\^]*n[\"\^]*p[\"\^]*r[\"\^]*e[\"\^]*v[\"\^]*e[\"\^]*n[\"\^]*t[\"\^]*i[\"\^]*o[\"\^]*n|(?:p[\"\^]*e[\"\^]*r[\"\^]*f[\"\^]*o[\"\^]*r[\"\^]*m[\"\^]*a[\"\^]*n[\"\^]*c|h[\"\^]*a[\"\^]*r[\"\^]*d[\"\^]*w[\"\^]*a[\"\^]*r)[\"\^]*e|a[\"\^]*d[\"\^]*v[\"\^]*a[\"\^]*n[\"\^]*c[\"\^]*e[\"\^]*d)|i[\"\^]*n[\"\^]*f[\"\^]*o)|k[\"\^]*e[\"\^]*y|d[\"\^]*m)|h[\"\^]*(?:o[\"\^]*(?:w[\"\^]*(?:g[\"\^]*r[\"\^]*p|m[\"\^]*b[\"\^]*r)[\"\^]*s|r[\"\^]*t[\"\^]*c[\"\^]*u[\"\^]*t)|e[\"\^]*l[\"\^]*l[\"\^]*r[\"\^]*u[\"\^]*n[\"\^]*a[\"\^]*s|u[\"\^]*t[\"\^]*d[\"\^]*o[\"\^]*w[\"\^]*n|r[\"\^]*p[\"\^]*u[\"\^]*b[\"\^]*w|a[\"\^]*r[\"\^]*e|i[\"\^]*f[\"\^]*t)|e[\"\^]*(?:t[\"\^]*(?:(?:x[\"\^]*)?(?:[\s,;]|\.|/|<|>).*|l[\"\^]*o[\"\^]*c[\"\^]*a[\"\^]*l)|c[\"\^]*p[\"\^]*o[\"\^]*l|l[\"\^]*e[\"\^]*c[\"\^]*t)|c[\"\^]*(?:h[\"\^]*t[\"\^]*a[\"\^]*s[\"\^]*k[\"\^]*s|l[\"\^]*i[\"\^]*s[\"\^]*t)|u[\"\^]*b[\"\^]*(?:i[\"\^]*n[\"\^]*a[\"\^]*c[\"\^]*l|s[\"\^]*t)|(?:t[\"\^]*a|o)[\"\^]*r[\"\^]*t[\"\^]*(?:[\s,;]|\.|/|<|>).*|i[\"\^]*g[\"\^]*v[\"\^]*e[\"\^]*r[\"\^]*i[\"\^]*f|l[\"\^]*(?:e[\"\^]*e[\"\^]*p|m[\"\^]*g[\"\^]*r)|f[\"\^]*c|v[\"\^]*n)|p[\"\^]*(?:s[\"\^]*(?:s[\"\^]*(?:h[\"\^]*u[\"\^]*t[\"\^]*d[\"\^]*o[\"\^]*w[\"\^]*n|e[\"\^]*r[\"\^]*v[\"\^]*i[\"\^]*c[\"\^]*e|u[\"\^]*s[\"\^]*p[\"\^]*e[\"\^]*n[\"\^]*d)|l[\"\^]*(?:o[\"\^]*g[\"\^]*(?:g[\"\^]*e[\"\^]*d[\"\^]*o[\"\^]*n|l[\"\^]*i[\"\^]*s[\"\^]*t)|i[\"\^]*s[\"\^]*t)|p[\"\^]*(?:a[\"\^]*s[\"\^]*s[\"\^]*w[\"\^]*d|i[\"\^]*n[\"\^]*g)|g[\"\^]*e[\"\^]*t[\"\^]*s[\"\^]*i[\"\^]*d|e[\"\^]*x[\"\^]*e[\"\^]*c|f[\"\^]*i[\"\^]*l[\"\^]*e|i[\"\^]*n[\"\^]*f[\"\^]*o|k[\"\^]*i[\"\^]*l[\"\^]*l)|o[\"\^]*(?:w[\"\^]*e[\"\^]*r[\"\^]*(?:s[\"\^]*h[\"\^]*e[\"\^]*l[\"\^]*l(?:[\"\^]*_[\"\^]*i[\"\^]*s[\"\^]*e)?|c[\"\^]*f[\"\^]*g)|r[\"\^]*t[\"\^]*q[\"\^]*r[\"\^]*y|p[\"\^]*d)|r[\"\^]*(?:i[\"\^]*n[\"\^]*t[\"\^]*(?:(?:[\s,;]|\.|/|<|>).*|b[\"\^]*r[\"\^]*m)|n[\"\^]*(?:c[\"\^]*n[\"\^]*f[\"\^]*g|m[\"\^]*n[\"\^]*g[\"\^]*r)|o[\"\^]*m[\"\^]*p[\"\^]*t)|a[\"\^]*t[\"\^]*h[\"\^]*(?:p[\"\^]*i[\"\^]*n[\"\^]*g|(?:[\s,;]|\.|/|<|>).*)|e[\"\^]*r[\"\^]*(?:l(?:[\"\^]*(?:s[\"\^]*h|5))?|f[\"\^]*m[\"\^]*o[\"\^]*n)|y[\"\^]*t[\"\^]*h[\"\^]*o[\"\^]*n(?:[\"\^]*(?:3(?:[\"\^]*m)?|2))?|k[\"\^]*g[\"\^]*m[\"\^]*g[\"\^]*r|h[\"\^]*p(?:[\"\^]*[57])?|u[\"\^]*s[\"\^]*h[\"\^]*d|i[\"\^]*n[\"\^]*g)|r[\"\^]*(?:e[\"\^]*(?:(?:p[\"\^]*l[\"\^]*a[\"\^]*c[\"\^]*e|n(?:[\"\^]*a[\"\^]*m[\"\^]*e)?|s[\"\^]*e[\"\^]*t)[\"\^]*(?:[\s,;]|\.|/|<|>).*|g[\"\^]*(?:s[\"\^]*v[\"\^]*r[\"\^]*3[\"\^]*2|e[\"\^]*d[\"\^]*i[\"\^]*t|(?:[\s,;]|\.|/|<|>).*|i[\"\^]*n[\"\^]*i)|c[\"\^]*(?:d[\"\^]*i[\"\^]*s[\"\^]*c|o[\"\^]*v[\"\^]*e[\"\^]*r)|k[\"\^]*e[\"\^]*y[\"\^]*w[\"\^]*i[\"\^]*z)|u[\"\^]*(?:n[\"\^]*(?:d[\"\^]*l[\"\^]*l[\"\^]*3[\"\^]*2|a[\"\^]*s)|b[\"\^]*y[\"\^]*(?:1(?:[\"\^]*[89])?|2[\"\^]*[012]))|a[\"\^]*(?:s[\"\^]*(?:p[\"\^]*h[\"\^]*o[\"\^]*n[\"\^]*e|d[\"\^]*i[\"\^]*a[\"\^]*l)|r[\"\^]*(?:[\s,;]|\.|/|<|>).*)|m[\"\^]*(?:(?:d[\"\^]*i[\"\^]*r[\"\^]*)?(?:[\s,;]|\.|/|<|>).*|t[\"\^]*s[\"\^]*h[\"\^]*a[\"\^]*r[\"\^]*e)|o[\"\^]*(?:u[\"\^]*t[\"\^]*e[\"\^]*(?:[\s,;]|\.|/|<|>).*|b[\"\^]*o[\"\^]*c[\"\^]*o[\"\^]*p[\"\^]*y)|s[\"\^]*(?:t[\"\^]*r[\"\^]*u[\"\^]*i|y[\"\^]*n[\"\^]*c)|d[\"\^]*(?:[\s,;]|\.|/|<|>).*)|t[\"\^]*(?:a[\"\^]*(?:s[\"\^]*k[\"\^]*(?:k[\"\^]*i[\"\^]*l[\"\^]*l|l[\"\^]*i[\"\^]*s[\"\^]*t|s[\"\^]*c[\"\^]*h[\"\^]*d|m[\"\^]*g[\"\^]*r)|k[\"\^]*e[\"\^]*o[\"\^]*w[\"\^]*n)|(?:i[\"\^]*m[\"\^]*e[\"\^]*o[\"\^]*u|p[\"\^]*m[\"\^]*i[\"\^]*n[\"\^]*i|e[\"\^]*l[\"\^]*n[\"\^]*e|l[\"\^]*i[\"\^]*s)[\"\^]*t|s[\"\^]*(?:d[\"\^]*i[\"\^]*s[\"\^]*c[\"\^]*o|s[\"\^]*h[\"\^]*u[\"\^]*t[\"\^]*d)[\"\^]*n|y[\"\^]*p[\"\^]*e[\"\^]*(?:p[\"\^]*e[\"\^]*r[\"\^]*f|(?:[\s,;]|\.|/|<|>).*)|r[\"\^]*(?:a[\"\^]*c[\"\^]*e[\"\^]*r[\"\^]*t|e[\"\^]*e))|w[\"\^]*(?:i[\"\^]*n[\"\^]*(?:d[\"\^]*i[\"\^]*f[\"\^]*f|m[\"\^]*s[\"\^]*d[\"\^]*p|v[\"\^]*a[\"\^]*r|r[\"\^]*[ms])|u[\"\^]*(?:a[\"\^]*(?:u[\"\^]*c[\"\^]*l[\"\^]*t|p[\"\^]*p)|s[\"\^]*a)|s[\"\^]*c[\"\^]*(?:r[\"\^]*i[\"\^]*p[\"\^]*t|u[\"\^]*i)|e[\"\^]*v[\"\^]*t[\"\^]*u[\"\^]*t[\"\^]*i[\"\^]*l|m[\"\^]*i[\"\^]*(?:m[\"\^]*g[\"\^]*m[\"\^]*t|c)|a[\"\^]*i[\"\^]*t[\"\^]*f[\"\^]*o[\"\^]*r|h[\"\^]*o[\"\^]*a[\"\^]*m[\"\^]*i|g[\"\^]*e[\"\^]*t)|u[\"\^]*(?:s[\"\^]*(?:e[\"\^]*r[\"\^]*a[\"\^]*c[\"\^]*c[\"\^]*o[\"\^]*u[\"\^]*n[\"\^]*t[\"\^]*c[\"\^]*o[\"\^]*n[\"\^]*t[\"\^]*r[\"\^]*o[\"\^]*l[\"\^]*s[\"\^]*e[\"\^]*t[\"\^]*t[\"\^]*i[\"\^]*n[\"\^]*g[\"\^]*s|r[\"\^]*s[\"\^]*t[\"\^]*a[\"\^]*t)|n[\"\^]*(?:r[\"\^]*a[\"\^]*r|z[\"\^]*i[\"\^]*p))|q[\"\^]*(?:u[\"\^]*e[\"\^]*r[\"\^]*y[\"\^]*(?:[\s,;]|\.|/|<|>).*|p[\"\^]*r[\"\^]*o[\"\^]*c[\"\^]*e[\"\^]*s[\"\^]*s|w[\"\^]*i[\"\^]*n[\"\^]*s[\"\^]*t[\"\^]*a|g[\"\^]*r[\"\^]*e[\"\^]*p)|o[\"\^]*(?:d[\"\^]*b[\"\^]*c[\"\^]*(?:a[\"\^]*d[\"\^]*3[\"\^]*2|c[\"\^]*o[\"\^]*n[\"\^]*f)|p[\"\^]*e[\"\^]*n[\"\^]*f[\"\^]*i[\"\^]*l[\"\^]*e[\"\^]*s)|v[\"\^]*(?:o[\"\^]*l[\"\^]*(?:[\s,;]|\.|/|<|>).*|e[\"\^]*r[\"\^]*i[\"\^]*f[\"\^]*y)|x[\"\^]*c[\"\^]*(?:a[\"\^]*c[\"\^]*l[\"\^]*s|o[\"\^]*p[\"\^]*y)|z[\"\^]*i[\"\^]*p[\"\^]*(?:[\s,;]|\.|/|<|>).*)(?:\.[\"\^]*\w+)?\b" \
    "id:932115,\
    phase:2,\
    block,\
    capture,\
    t:none,\
    msg:'Remote Command Execution: Windows Command Injection',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-shell',\
    tag:'platform-windows',\
    tag:'attack-rce',\
    tag:'paranoia-level/1',\
    tag:'OWASP_CRS',\
    tag:'capec/1000/152/248/88',\
    tag:'PCI/6.5.2',\
    ctl:auditLogParts=+E,\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'"


# [ Windows PowerShell, cmdlets and options ]
#
# Detect some common PowerShell commands, cmdlets and options.
# These commands should be relatively uncommon in normal text, but
# potentially useful for code injection.
#
# If you are not running Windows, it is safe to disable this rule.
#
# https://technet.microsoft.com/en-us/magazine/ff714569.aspx
# https://msdn.microsoft.com/en-us/powershell/scripting/core-powershell/console/powershell.exe-command-line-help
#
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "@pmFromFile windows-powershell-commands.data" \
    "id:932120,\
    phase:2,\
    block,\
    capture,\
    t:none,t:cmdLine,\
    msg:'Remote Command Execution: Windows PowerShell Command Found',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-shell',\
    tag:'language-powershell',\
    tag:'platform-windows',\
    tag:'attack-rce',\
    tag:'paranoia-level/1',\
    tag:'OWASP_CRS',\
    tag:'capec/1000/152/248/88',\
    tag:'PCI/6.5.2',\
    ctl:auditLogParts=+E,\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'"


# [ Windows Powershell cmdlet aliases ]
#
# Attempts to detect aliases of the common PowerShell cmdlets in windows-powershell-commands.data
# If you are not running Windows, it is safe to disable this rule.
#
# There are other aliases which are similar to Unix, but they are properly handled by rule 932105
#
# Regular expression generated from util/regexp-assemble/data/932125.data.
# To update the regular expression run the following shell script
# (consult util/regexp-assemble/README.md for details):
#   util/regexp-assemble/regexp-assemble.py update 932125
#
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "@rx (?i)(?:[;\n\r`]|(?:\|)?\||&?&|\{)\s*(?:['(,@\"\s])*(?:(?:(?:[\x5c'\"\^]*\w[\x5c'\"\^]*:.*|[\^\.\w '\"/\x5c]*)\x5c|[\w'\"\./]+\/))?[\"\^]*(?:r[\"\^]*(?:m[\"\^]*(?:d[\"\^]*i[\"\^]*r|o)|(?:c[\"\^]*)?j[\"\^]*b|(?:w[\"\^]*m[\"\^]*)?i|s[\"\^]*n(?:[\"\^]*p)?|v(?:[\"\^]*p[\"\^]*a)?|(?:b[\"\^]*)?p|d(?:[\"\^]*r)?|n[\"\^]*[ip]|e[\"\^]*n)|g[\"\^]*(?:[uv]|s[\"\^]*(?:n(?:[\"\^]*p)?|v)|(?:w[\"\^]*m[\"\^]*)?i|c(?:[\"\^]*[ims])?|(?:a[\"\^]*)?l|m(?:[\"\^]*o)?|p(?:[\"\^]*s)?|b[\"\^]*p|d[\"\^]*r|h[\"\^]*y|j[\"\^]*b)|s[\"\^]*(?:[cv]|p(?:[\"\^]*(?:j[\"\^]*b|p[\"\^]*s|s[\"\^]*v))?|a[\"\^]*(?:j[\"\^]*b|p[\"\^]*s|s[\"\^]*v|l)|(?:w[\"\^]*m[\"\^]*)?i|l(?:[\"\^]*s)?|b[\"\^]*p)|i[\"\^]*(?:p[\"\^]*(?:c[\"\^]*s[\"\^]*v|a[\"\^]*l|m[\"\^]*o|s[\"\^]*n)|w[\"\^]*(?:m[\"\^]*i|r)|c[\"\^]*m|e[\"\^]*x|h[\"\^]*y|i)|c[\"\^]*(?:l[\"\^]*(?:[cipv]|h[\"\^]*y)|h[\"\^]*d[\"\^]*i[\"\^]*r|v[\"\^]*p[\"\^]*a|p[\"\^]*[ip])|e[\"\^]*(?:p[\"\^]*(?:c[\"\^]*s[\"\^]*v|a[\"\^]*l|s[\"\^]*n)|[tx][\"\^]*s[\"\^]*n|b[\"\^]*p)|f[\"\^]*(?:[cltw]|o[\"\^]*r[\"\^]*e[\"\^]*a[\"\^]*c[\"\^]*h)|n[\"\^]*(?:[iv]|a[\"\^]*l|d[\"\^]*r|m[\"\^]*o|s[\"\^]*n)|p[\"\^]*(?:u[\"\^]*s[\"\^]*h|o[\"\^]*p)[\"\^]*d|d[\"\^]*(?:b[\"\^]*p|e[\"\^]*l|i[\"\^]*r)|a[\"\^]*(?:s[\"\^]*n[\"\^]*p|c)|t[\"\^]*r[\"\^]*c[\"\^]*m|o[\"\^]*g[\"\^]*v|w[\"\^]*j[\"\^]*b|m[\"\^]*[ip]|l[\"\^]*p)[\"\^]*(?:[\s,;]|\.|/|<|>).*(?:\.[\"\^]*\w+)?\b(?:\.[\"\^]*\w+)?\b" \
    "id:932125,\
    phase:2,\
    block,\
    capture,\
    t:none,\
    msg:'Remote Command Execution: Windows Powershell Alias Command Injection',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-shell',\
    tag:'platform-windows',\
    tag:'attack-rce',\
    tag:'paranoia-level/1',\
    tag:'OWASP_CRS',\
    tag:'capec/1000/152/248/88',\
    tag:'PCI/6.5.2',\
    ctl:auditLogParts=+E,\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'"


# [ Unix shell expressions ]
#
# Detects the following patterns which are common in Unix shell scripts
# and one-liners:
#
# $(foo)    Command substitution
# ${foo}    Parameter expansion
# <(foo)    Process substitution
# >(foo)    Process substitution
# $((foo))  Arithmetic expansion
# /e[t]c    Shell glob expression to bypass wordlists
#
# Regular expression generated from util/regexp-assemble/data/932130.data.
# To update the regular expression run the following shell script
# (consult util/regexp-assemble/README.md for details):
#   util/regexp-assemble/regexp-assemble.py update 932130
#
# This rule has a stricter sibling: 932131 (PL2) that applies the same regex to User-Agent and Referer
#
# This rule is essential to defend against the Log4J / Log4Shell attacks (see also rule 944150)
#
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "@rx (?:\$(?:\((?:\(.*\)|.*)\)|\{.*})|\/\w*\[!?.+\]|[<>]\(.*\))" \
    "id:932130,\
    phase:2,\
    block,\
    capture,\
    t:none,t:cmdLine,\
    msg:'Remote Command Execution: Unix Shell Expression Found',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-shell',\
    tag:'platform-unix',\
    tag:'attack-rce',\
    tag:'paranoia-level/1',\
    tag:'OWASP_CRS',\
    tag:'capec/1000/152/248/88',\
    tag:'PCI/6.5.2',\
    ctl:auditLogParts=+E,\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'"


# [ Windows FOR, IF commands ]
#
# This rule detects Windows command shell FOR and IF commands.
# If you are not running Windows, it is safe to disable this rule.
#
# Examples:
#
#   FOR              %a IN (set) DO
#   FOR /D           %a IN (dirs) DO
#   FOR /F "options" %a IN (text|"text") DO
#   FOR /L           %a IN (start,step,end) DO
#   FOR /R C:\dir    %A IN (set) DO
#
#   IF [/I] [NOT] EXIST filename | DEFINED define | ERRORLEVEL n | CMDEXTVERSION n
#   IF [/I] [NOT] item1   [==|EQU|NEQ|LSS|LEQ|GTR|GEQ] item2
#   IF [/I] [NOT] (item1) [==|EQU|NEQ|LSS|LEQ|GTR|GEQ] (item2)
#
# http://ss64.com/nt/if.html
# http://ss64.com/nt/for.html
#
# Regular expression generated from util/regexp-assemble/data/932140.data.
# To update the regular expression run the following shell script
# (consult util/regexp-assemble/README.md for details):
#   util/regexp-assemble/regexp-assemble.py update 932140
#
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "@rx \b(?:if(?:/i)?(?: not)?(?: exist\b| defined\b| errorlevel\b| cmdextversion\b|(?: |\().*(?:\bgeq\b|\bequ\b|\bneq\b|\bleq\b|\bgtr\b|\blss\b|==))|for(?:/[dflr].*)? %+[^ ]+ in\(.*\)\s?do)" \
    "id:932140,\
    phase:2,\
    block,\
    capture,\
    t:none,t:cmdLine,\
    msg:'Remote Command Execution: Windows FOR/IF Command Found',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-shell',\
    tag:'platform-windows',\
    tag:'attack-rce',\
    tag:'paranoia-level/1',\
    tag:'OWASP_CRS',\
    tag:'capec/1000/152/248/88',\
    tag:'PCI/6.5.2',\
    ctl:auditLogParts=+E,\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'"


# [ Unix direct remote command execution ]
#
# Detects Unix commands at the start of a parameter (direct RCE).
# Example: foo=wget%20www.example.com
#
# This case is different from command injection (rule 932100), where a
# command string is appended (injected) to a regular parameter, and then
# passed to a shell unescaped.
#
# This rule is also triggered by an Oracle WebLogic Remote Command Execution exploit:
# [ Oracle WebLogic vulnerability CVE-2017-10271 - Exploit tested: https://www.exploit-db.com/exploits/43458 ]
#
# Due to a higher risk of false positives, the following changes have been
# made relative to rule 932100:
# 1) the set of commands is smaller
# 2) we require a trailing space (denoting command parameters) or command
#    separator character after the command
#
# This rule has a stricter sibling: 932151
#
# Regular expression generated from util/regexp-assemble/data/932150.data.
# To update the regular expression run the following shell script
# (consult util/regexp-assemble/README.md for details):
#   util/regexp-assemble/regexp-assemble.py update 932150
#
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "@rx (?:(?:^|=)\s*(?:(?:\w+=(?:[^\s]*|\$.*|\$.*|<.*|>.*|\'.*\'|\".*\")\s+|(?:\s*\(|!)\s*|\{|\$))*\s*(?:['\"])*(?:[\?\*\[\]\(\)\-\|+\w'\"\./\x5c]+/)?[\x5c'\"]*(?:l[\x5c'\"]*(?:z(?:[\x5c'\"]*(?:m[\x5c'\"]*(?:a(?:[\x5c'\"]*(?:i[\x5c'\"]*n[\x5c'\"]*f[\x5c'\"]*o|d[\x5c'\"]*e[\x5c'\"]*c))?|o[\x5c'\"]*r[\x5c'\"]*e)|(?:[ef][\x5c'\"]*)?g[\x5c'\"]*r[\x5c'\"]*e[\x5c'\"]*p|4(?:[\x5c'\"]*c(?:[\x5c'\"]*a[\x5c'\"]*t)?)?|c[\x5c'\"]*(?:a[\x5c'\"]*t|m[\x5c'\"]*p)|d[\x5c'\"]*i[\x5c'\"]*f[\x5c'\"]*f|l[\x5c'\"]*e[\x5c'\"]*s[\x5c'\"]*s))?|s(?:[\x5c'\"]*(?:b[\x5c'\"]*_[\x5c'\"]*r[\x5c'\"]*e[\x5c'\"]*l[\x5c'\"]*e[\x5c'\"]*a[\x5c'\"]*s[\x5c'\"]*e|c[\x5c'\"]*p[\x5c'\"]*u|m[\x5c'\"]*o[\x5c'\"]*d|p[\x5c'\"]*c[\x5c'\"]*i|u[\x5c'\"]*s[\x5c'\"]*b|-[\x5c'\"]*F|o[\x5c'\"]*f))?|e[\x5c'\"]*s[\x5c'\"]*s[\x5c'\"]*(?:(?:f[\x5c'\"]*i[\x5c'\"]*l|p[\x5c'\"]*i[\x5c'\"]*p)[\x5c'\"]*e|e[\x5c'\"]*c[\x5c'\"]*h[\x5c'\"]*o)|a[\x5c'\"]*s[\x5c'\"]*t[\x5c'\"]*(?:l[\x5c'\"]*o[\x5c'\"]*g(?:[\x5c'\"]*i[\x5c'\"]*n)?|c[\x5c'\"]*o[\x5c'\"]*m[\x5c'\"]*m)|w[\x5c'\"]*p(?:[\x5c'\"]*-[\x5c'\"]*d[\x5c'\"]*o[\x5c'\"]*w[\x5c'\"]*n[\x5c'\"]*l[\x5c'\"]*o[\x5c'\"]*a[\x5c'\"]*d)?|f[\x5c'\"]*t[\x5c'\"]*p(?:[\x5c'\"]*g[\x5c'\"]*e[\x5c'\"]*t)?|y[\x5c'\"]*n[\x5c'\"]*x)|z[\x5c'\"]*(?:i[\x5c'\"]*p(?:[\x5c'\"]*(?:(?:m[\x5c'\"]*e[\x5c'\"]*r[\x5c'\"]*g|n[\x5c'\"]*o[\x5c'\"]*t)[\x5c'\"]*e|d[\x5c'\"]*e[\x5c'\"]*t[\x5c'\"]*a[\x5c'\"]*i[\x5c'\"]*l[\x5c'\"]*s|c[\x5c'\"]*(?:l[\x5c'\"]*o[\x5c'\"]*a[\x5c'\"]*k|m[\x5c'\"]*p)|s[\x5c'\"]*p[\x5c'\"]*l[\x5c'\"]*i[\x5c'\"]*t|g[\x5c'\"]*r[\x5c'\"]*e[\x5c'\"]*p|i[\x5c'\"]*n[\x5c'\"]*f[\x5c'\"]*o|t[\x5c'\"]*o[\x5c'\"]*o[\x5c'\"]*l))?|s[\x5c'\"]*(?:t[\x5c'\"]*d(?:[\x5c'\"]*(?:g[\x5c'\"]*r[\x5c'\"]*e[\x5c'\"]*p|l[\x5c'\"]*e[\x5c'\"]*s[\x5c'\"]*s|(?:c[\x5c'\"]*a|m)[\x5c'\"]*t))?|h)|(?:[ef][\x5c'\"]*)?g[\x5c'\"]*r[\x5c'\"]*e[\x5c'\"]*p|c[\x5c'\"]*(?:a[\x5c'\"]*t|m[\x5c'\"]*p)|d[\x5c'\"]*i[\x5c'\"]*f[\x5c'\"]*f|l[\x5c'\"]*e[\x5c'\"]*s[\x5c'\"]*s|m[\x5c'\"]*o[\x5c'\"]*r[\x5c'\"]*e|r[\x5c'\"]*u[\x5c'\"]*n)|b[\x5c'\"]*(?:z[\x5c'\"]*(?:i[\x5c'\"]*p[\x5c'\"]*2(?:[\x5c'\"]*r[\x5c'\"]*e[\x5c'\"]*c[\x5c'\"]*o[\x5c'\"]*v[\x5c'\"]*e[\x5c'\"]*r)?|e[\x5c'\"]*(?:g[\x5c'\"]*r[\x5c'\"]*e[\x5c'\"]*p|x[\x5c'\"]*e)|(?:f[\x5c'\"]*)?g[\x5c'\"]*r[\x5c'\"]*e[\x5c'\"]*p|c[\x5c'\"]*(?:a[\x5c'\"]*t|m[\x5c'\"]*p)|d[\x5c'\"]*i[\x5c'\"]*f[\x5c'\"]*f|l[\x5c'\"]*e[\x5c'\"]*s[\x5c'\"]*s|m[\x5c'\"]*o[\x5c'\"]*r[\x5c'\"]*e|z)|u[\x5c'\"]*(?:i[\x5c'\"]*l[\x5c'\"]*t[\x5c'\"]*i[\x5c'\"]*n|n[\x5c'\"]*z[\x5c'\"]*i[\x5c'\"]*p[\x5c'\"]*2|s[\x5c'\"]*y[\x5c'\"]*b[\x5c'\"]*o[\x5c'\"]*x)|s[\x5c'\"]*d[\x5c'\"]*(?:c[\x5c'\"]*a[\x5c'\"]*t|i[\x5c'\"]*f[\x5c'\"]*f|t[\x5c'\"]*a[\x5c'\"]*r)|a[\x5c'\"]*s[\x5c'\"]*(?:e[\x5c'\"]*(?:3[\x5c'\"]*2|6[\x5c'\"]*4|n[\x5c'\"]*c)|h))|s[\x5c'\"]*(?:e[\x5c'\"]*(?:t[\x5c'\"]*(?:e[\x5c'\"]*n[\x5c'\"]*v|s[\x5c'\"]*i[\x5c'\"]*d)|n[\x5c'\"]*d[\x5c'\"]*m[\x5c'\"]*a[\x5c'\"]*i[\x5c'\"]*l|d)|h(?:[\x5c'\"]*\.[\x5c'\"]*d[\x5c'\"]*i[\x5c'\"]*s[\x5c'\"]*t[\x5c'\"]*r[\x5c'\"]*i[\x5c'\"]*b)?|o[\x5c'\"]*(?:u[\x5c'\"]*r[\x5c'\"]*c[\x5c'\"]*e|c[\x5c'\"]*a[\x5c'\"]*t)|t[\x5c'\"]*r[\x5c'\"]*i[\x5c'\"]*n[\x5c'\"]*g[\x5c'\"]*s|y[\x5c'\"]*s[\x5c'\"]*c[\x5c'\"]*t[\x5c'\"]*l|c[\x5c'\"]*(?:h[\x5c'\"]*e[\x5c'\"]*d|p)|d[\x5c'\"]*i[\x5c'\"]*f[\x5c'\"]*f|f[\x5c'\"]*t[\x5c'\"]*p|u[\x5c'\"]*d[\x5c'\"]*o|s[\x5c'\"]*h|v[\x5c'\"]*n)|p[\x5c'\"]*(?:t[\x5c'\"]*a[\x5c'\"]*r(?:[\x5c'\"]*(?:d[\x5c'\"]*i[\x5c'\"]*f[\x5c'\"]*f|g[\x5c'\"]*r[\x5c'\"]*e[\x5c'\"]*p))?|y[\x5c'\"]*t[\x5c'\"]*h[\x5c'\"]*o[\x5c'\"]*n[\x5c'\"]*[23]?[\x5c'\"]*(?:\.[0-9.\x5c'\"]+)?(?:[dmu]+)?|k[\x5c'\"]*(?:e[\x5c'\"]*x[\x5c'\"]*e[\x5c'\"]*c|i[\x5c'\"]*l[\x5c'\"]*l)|r[\x5c'\"]*i[\x5c'\"]*n[\x5c'\"]*t[\x5c'\"]*(?:e[\x5c'\"]*n[\x5c'\"]*v|f)|(?:g[\x5c'\"]*r[\x5c'\"]*e|f[\x5c'\"]*t)[\x5c'\"]*p|e[\x5c'\"]*r[\x5c'\"]*l(?:[\x5c'\"]*5)?|h[\x5c'\"]*p(?:[\x5c'\"]*[57])?|(?:i[\x5c'\"]*g|x)[\x5c'\"]*z|o[\x5c'\"]*p[\x5c'\"]*d)|n[\x5c'\"]*(?:c(?:[\x5c'\"]*(?:\.[\x5c'\"]*(?:t[\x5c'\"]*r[\x5c'\"]*a[\x5c'\"]*d[\x5c'\"]*i[\x5c'\"]*t[\x5c'\"]*i[\x5c'\"]*o[\x5c'\"]*n[\x5c'\"]*a[\x5c'\"]*l|o[\x5c'\"]*p[\x5c'\"]*e[\x5c'\"]*n[\x5c'\"]*b[\x5c'\"]*s[\x5c'\"]*d)|a[\x5c'\"]*t))?|e[\x5c'\"]*t[\x5c'\"]*(?:k[\x5c'\"]*i[\x5c'\"]*t[\x5c'\"]*-[\x5c'\"]*f[\x5c'\"]*t[\x5c'\"]*p|(?:s[\x5c'\"]*t|c)[\x5c'\"]*a[\x5c'\"]*t)|o[\x5c'\"]*h[\x5c'\"]*u[\x5c'\"]*p|p[\x5c'\"]*i[\x5c'\"]*n[\x5c'\"]*g|s[\x5c'\"]*t[\x5c'\"]*a[\x5c'\"]*t)|t[\x5c'\"]*(?:c[\x5c'\"]*(?:p[\x5c'\"]*(?:t[\x5c'\"]*r[\x5c'\"]*a[\x5c'\"]*c[\x5c'\"]*e[\x5c'\"]*r[\x5c'\"]*o[\x5c'\"]*u[\x5c'\"]*t[\x5c'\"]*e|i[\x5c'\"]*n[\x5c'\"]*g)|s[\x5c'\"]*h)|r[\x5c'\"]*a[\x5c'\"]*c[\x5c'\"]*e[\x5c'\"]*r[\x5c'\"]*o[\x5c'\"]*u[\x5c'\"]*t[\x5c'\"]*e(?:[\x5c'\"]*6)?|(?:i[\x5c'\"]*m[\x5c'\"]*e[\x5c'\"]*o[\x5c'\"]*u|e[\x5c'\"]*l[\x5c'\"]*n[\x5c'\"]*e)[\x5c'\"]*t|a[\x5c'\"]*(?:i[\x5c'\"]*l(?:[\x5c'\"]*f)?|r))|r[\x5c'\"]*(?:e[\x5c'\"]*(?:p[\x5c'\"]*(?:l[\x5c'\"]*a[\x5c'\"]*c[\x5c'\"]*e|e[\x5c'\"]*a[\x5c'\"]*t)|a[\x5c'\"]*l[\x5c'\"]*p[\x5c'\"]*a[\x5c'\"]*t[\x5c'\"]*h|n[\x5c'\"]*a[\x5c'\"]*m[\x5c'\"]*e)|u[\x5c'\"]*b[\x5c'\"]*y(?:[\x5c'\"]*(?:1(?:[\x5c'\"]*[89])?|2[\x5c'\"]*[012]))?|m[\x5c'\"]*(?:u[\x5c'\"]*s[\x5c'\"]*e|d[\x5c'\"]*i)[\x5c'\"]*r|n[\x5c'\"]*a[\x5c'\"]*n[\x5c'\"]*o|s[\x5c'\"]*y[\x5c'\"]*n[\x5c'\"]*c|c[\x5c'\"]*p)|u[\x5c'\"]*(?:n[\x5c'\"]*(?:c[\x5c'\"]*o[\x5c'\"]*m[\x5c'\"]*p[\x5c'\"]*r[\x5c'\"]*e[\x5c'\"]*s[\x5c'\"]*s|z[\x5c'\"]*(?:s[\x5c'\"]*t[\x5c'\"]*d|i[\x5c'\"]*p)|(?:p[\x5c'\"]*i[\x5c'\"]*g|x)[\x5c'\"]*z|l[\x5c'\"]*z[\x5c'\"]*(?:m[\x5c'\"]*a|4)|a[\x5c'\"]*m[\x5c'\"]*e|r[\x5c'\"]*a[\x5c'\"]*r|s[\x5c'\"]*e[\x5c'\"]*t)|s[\x5c'\"]*e[\x5c'\"]*r[\x5c'\"]*(?:(?:a[\x5c'\"]*d|m[\x5c'\"]*o)[\x5c'\"]*d|d[\x5c'\"]*e[\x5c'\"]*l))|m[\x5c'\"]*(?:y[\x5c'\"]*s[\x5c'\"]*q[\x5c'\"]*l[\x5c'\"]*(?:d[\x5c'\"]*u[\x5c'\"]*m[\x5c'\"]*p(?:[\x5c'\"]*s[\x5c'\"]*l[\x5c'\"]*o[\x5c'\"]*w)?|h[\x5c'\"]*o[\x5c'\"]*t[\x5c'\"]*c[\x5c'\"]*o[\x5c'\"]*p[\x5c'\"]*y|a[\x5c'\"]*d[\x5c'\"]*m[\x5c'\"]*i[\x5c'\"]*n|s[\x5c'\"]*h[\x5c'\"]*o[\x5c'\"]*w)|l[\x5c'\"]*o[\x5c'\"]*c[\x5c'\"]*a[\x5c'\"]*t[\x5c'\"]*e|a[\x5c'\"]*i[\x5c'\"]*l[\x5c'\"]*q)|c[\x5c'\"]*(?:o[\x5c'\"]*(?:r[\x5c'\"]*e[\x5c'\"]*_[\x5c'\"]*p[\x5c'\"]*e[\x5c'\"]*r[\x5c'\"]*l[\x5c'\"]*\/[\x5c'\"]*z[\x5c'\"]*i[\x5c'\"]*p[\x5c'\"]*d[\x5c'\"]*e[\x5c'\"]*t[\x5c'\"]*a[\x5c'\"]*i[\x5c'\"]*l[\x5c'\"]*s|m[\x5c'\"]*m[\x5c'\"]*a[\x5c'\"]*n[\x5c'\"]*d|p[\x5c'\"]*r[\x5c'\"]*o[\x5c'\"]*c)|u[\x5c'\"]*r[\x5c'\"]*l|9[\x5c'\"]*9|s[\x5c'\"]*h|c)|x[\x5c'\"]*(?:z(?:[\x5c'\"]*(?:(?:[ef][\x5c'\"]*)?g[\x5c'\"]*r[\x5c'\"]*e[\x5c'\"]*p|d[\x5c'\"]*(?:i[\x5c'\"]*f[\x5c'\"]*f|e[\x5c'\"]*c)|c[\x5c'\"]*(?:a[\x5c'\"]*t|m[\x5c'\"]*p)|l[\x5c'\"]*e[\x5c'\"]*s[\x5c'\"]*s|m[\x5c'\"]*o[\x5c'\"]*r[\x5c'\"]*e))?|a[\x5c'\"]*r[\x5c'\"]*g[\x5c'\"]*s)|f[\x5c'\"]*(?:t[\x5c'\"]*p[\x5c'\"]*(?:s[\x5c'\"]*t[\x5c'\"]*a[\x5c'\"]*t[\x5c'\"]*s|w[\x5c'\"]*h[\x5c'\"]*o)|i[\x5c'\"]*l[\x5c'\"]*e[\x5c'\"]*t[\x5c'\"]*e[\x5c'\"]*s[\x5c'\"]*t|e[\x5c'\"]*t[\x5c'\"]*c[\x5c'\"]*h|g[\x5c'\"]*r[\x5c'\"]*e[\x5c'\"]*p)|g[\x5c'\"]*(?:z[\x5c'\"]*(?:c[\x5c'\"]*a[\x5c'\"]*t|e[\x5c'\"]*x[\x5c'\"]*e|i[\x5c'\"]*p)|(?:u[\x5c'\"]*n[\x5c'\"]*z[\x5c'\"]*i|r[\x5c'\"]*e)[\x5c'\"]*p|c[\x5c'\"]*c)|e[\x5c'\"]*(?:g[\x5c'\"]*r[\x5c'\"]*e[\x5c'\"]*p|c[\x5c'\"]*h[\x5c'\"]*o|v[\x5c'\"]*a[\x5c'\"]*l|x[\x5c'\"]*e[\x5c'\"]*c|n[\x5c'\"]*v)|d[\x5c'\"]*(?:m[\x5c'\"]*e[\x5c'\"]*s[\x5c'\"]*g|a[\x5c'\"]*s[\x5c'\"]*h|i[\x5c'\"]*f[\x5c'\"]*f|o[\x5c'\"]*a[\x5c'\"]*s)|j[\x5c'\"]*(?:o[\x5c'\"]*b[\x5c'\"]*s[\x5c'\"]*\s+[\x5c'\"]*-[\x5c'\"]*x|a[\x5c'\"]*v[\x5c'\"]*a)|w[\x5c'\"]*(?:h[\x5c'\"]*o[\x5c'\"]*a[\x5c'\"]*m[\x5c'\"]*i|g[\x5c'\"]*e[\x5c'\"]*t|3[\x5c'\"]*m)|i[\x5c'\"]*r[\x5c'\"]*b(?:[\x5c'\"]*(?:1(?:[\x5c'\"]*[89])?|2[\x5c'\"]*[012]))?|o[\x5c'\"]*n[\x5c'\"]*i[\x5c'\"]*n[\x5c'\"]*t[\x5c'\"]*r|h[\x5c'\"]*(?:e[\x5c'\"]*a[\x5c'\"]*d|u[\x5c'\"]*p)|v[\x5c'\"]*i[\x5c'\"]*(?:g[\x5c'\"]*r|p[\x5c'\"]*w)|7[\x5c'\"]*z(?:[\x5c'\"]*[ar])?|G[\x5c'\"]*E[\x5c'\"]*T|k[\x5c'\"]*s[\x5c'\"]*h)|\$[\x5c'\"]*(?:\{[\x5c'\"]*S[\x5c'\"]*H[\x5c'\"]*E[\x5c'\"]*L[\x5c'\"]*L[\x5c'\"]*}|S[\x5c'\"]*H[\x5c'\"]*E[\x5c'\"]*L[\x5c'\"]*L))[\x5c'\"]*(?:\s|;|\||&|<|>)" \
    "id:932150,\
    phase:2,\
    block,\
    capture,\
    t:none,\
    msg:'Remote Command Execution: Direct Unix Command Execution',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-shell',\
    tag:'platform-unix',\
    tag:'attack-rce',\
    tag:'paranoia-level/1',\
    tag:'OWASP_CRS',\
    tag:'capec/1000/152/248/88',\
    tag:'PCI/6.5.2',\
    ctl:auditLogParts=+E,\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'"


# [ Unix shell history invocation ]
#
# Detects Unix shell history invocations in any context.
#
# Example:
#   GET /?rce=example.com
#   GET /?rce=curl%20
#   GET /?rce=!-1!-2
#
# Will execute `curl example.com`. We should be able to detect the '!-<digit>' sequence with a very low risk of false-positives since the sequence is very specific
# and does not allow for whitespaces in between.
#
# This rule has stricter siblings:
#   * 932331 (PL3)
#
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "@rx !-\d" \
    "id:932330,\
    phase:2,\
    block,\
    capture,\
    t:none,\
    msg:'Remote Command Execution: Unix shell history invocation',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-shell',\
    tag:'platform-unix',\
    tag:'attack-rce',\
    tag:'paranoia-level/1',\
    tag:'OWASP_CRS',\
    tag:'capec/1000/152/248/88',\
    tag:'PCI/6.5.2',\
    ctl:auditLogParts=+E,\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'"


# [ Unix shell snippets ]
#
# Detect some common sequences found in shell commands and scripts.
#
# Some commands which were restricted in earlier rules due to FP,
# have been added here with their full path, in order to catch some
# cases where the full path is sent.
#
# This rule is also triggered by an Apache Struts Remote Code Execution exploit:
# [ Apache Struts vulnerability CVE-2017-9805 - Exploit tested: https://www.exploit-db.com/exploits/42627 ]
#
# This rule is also triggered by an Oracle WebLogic Remote Command Execution exploit:
# [ Oracle WebLogic vulnerability CVE-2017-10271 - Exploit tested: https://www.exploit-db.com/exploits/43458 ]

SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "@pmFromFile unix-shell.data" \
    "id:932160,\
    phase:2,\
    block,\
    capture,\
    t:none,t:cmdLine,t:normalizePath,\
    msg:'Remote Command Execution: Unix Shell Code Found',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-shell',\
    tag:'platform-unix',\
    tag:'attack-rce',\
    tag:'paranoia-level/1',\
    tag:'OWASP_CRS',\
    tag:'capec/1000/152/248/88',\
    tag:'PCI/6.5.2',\
    ctl:auditLogParts=+E,\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'"


# [ Shellshock vulnerability (CVE-2014-6271 and CVE-2014-7169) ]
#
# Detect exploitation of "Shellshock" GNU Bash RCE vulnerability.
#
# Based on ModSecurity rules created by Red Hat.
# Permission for use was granted by Martin Prpic <secalert@redhat.com>
#
# https://access.redhat.com/articles/1212303
#
SecRule REQUEST_HEADERS|REQUEST_LINE "@rx ^\(\s*\)\s+{" \
    "id:932170,\
    phase:1,\
    block,\
    capture,\
    t:none,t:urlDecode,\
    msg:'Remote Command Execution: Shellshock (CVE-2014-6271)',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-shell',\
    tag:'platform-unix',\
    tag:'attack-rce',\
    tag:'paranoia-level/1',\
    tag:'OWASP_CRS',\
    tag:'capec/1000/152/248/88',\
    tag:'PCI/6.5.2',\
    ctl:auditLogParts=+E,\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'"

SecRule ARGS_NAMES|ARGS|FILES_NAMES "@rx ^\(\s*\)\s+{" \
    "id:932171,\
    phase:2,\
    block,\
    capture,\
    t:none,t:urlDecode,t:urlDecodeUni,\
    msg:'Remote Command Execution: Shellshock (CVE-2014-6271)',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-shell',\
    tag:'platform-unix',\
    tag:'attack-rce',\
    tag:'paranoia-level/1',\
    tag:'OWASP_CRS',\
    tag:'capec/1000/152/248/88',\
    tag:'PCI/6.5.2',\
    ctl:auditLogParts=+E,\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'"


#
# -=[ Restricted File Upload ]=-
#
# Detects attempts to upload a file with a forbidden filename.
#
# Many application contain Unrestricted File Upload vulnerabilities.
# https://www.owasp.org/index.php/Unrestricted_File_Upload
#
# These might be abused to upload configuration files or other files
# that affect the behavior of the web server, possibly causing remote
# code execution.
#
SecRule FILES|REQUEST_HEADERS:X-Filename|REQUEST_HEADERS:X_Filename|REQUEST_HEADERS:X-File-Name \
    "@pmFromFile restricted-upload.data" \
    "id:932180,\
    phase:2,\
    block,\
    capture,\
    t:none,\
    msg:'Restricted File Upload Attempt',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-multi',\
    tag:'platform-multi',\
    tag:'attack-rce',\
    tag:'paranoia-level/1',\
    tag:'OWASP_CRS',\
    tag:'capec/1000/152/248/88',\
    tag:'PCI/6.5.2',\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'"


SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 2" "id:932013,phase:1,pass,nolog,skipAfter:END-REQUEST-932-APPLICATION-ATTACK-RCE"
SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 2" "id:932014,phase:2,pass,nolog,skipAfter:END-REQUEST-932-APPLICATION-ATTACK-RCE"
#
# -= Paranoia Level 2 =- (apply only when tx.detection_paranoia_level is sufficiently high: 2 or higher)
#

# This is a stricter sibling of rule 932100.
# The source command, dot character was moved from 932100 at PL1 to
# this stricter sibling 932101 at PL2 because of false positives.
# For explanation of this rule, see rule 932100.
#
# Regular expression generated from util/regexp-assemble/data/932101.data.
# To update the regular expression run the following shell script
# (consult util/regexp-assemble/README.md for details):
#   util/regexp-assemble/regexp-assemble.py update 932101
#
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "@rx (?:[;\n\r`]|\$(?:\(?\(|{)|(?:\|)?\||\(\s*\)|[<>]\(|&?&|\{)\s*(?:(?:\w+=(?:[^\s]*|\$.*|\$.*|<.*|>.*|\'.*\'|\".*\")\s+|(?:\s*\(|!)\s*|\{|\$))*\s*(?:['\"])*(?:[\?\*\[\]\(\)\-\|+\w'\"\./\x5c]+/)?[\x5c'\"]*\.\s.*\b" \
    "id:932101,\
    phase:2,\
    block,\
    capture,\
    t:none,\
    msg:'Remote Command Execution: Unix Command Injection',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-shell',\
    tag:'platform-unix',\
    tag:'attack-rce',\
    tag:'paranoia-level/2',\
    tag:'OWASP_CRS',\
    tag:'capec/1000/152/248/88',\
    tag:'PCI/6.5.2',\
    ctl:auditLogParts=+E,\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'"

# This is a stricter sibling of rule 932130.
#
# It applies the same regular expression to the
# User-Agent and Referer HTTP headers.
#
# Unlike the sibling rule, this rule runs in phase 1.
#
SecRule REQUEST_HEADERS:User-Agent|REQUEST_HEADERS:Referer "@rx (?:\$(?:\((?:\(.*\)|.*)\)|\{.*})|[<>]\(.*\)|\[!?.+\])" \
    "id:932131,\
    phase:1,\
    block,\
    capture,\
    t:none,t:cmdLine,\
    msg:'Remote Command Execution: Unix Shell Expression Found',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-shell',\
    tag:'platform-unix',\
    tag:'attack-rce',\
    tag:'paranoia-level/2',\
    tag:'OWASP_CRS',\
    tag:'capec/1000/152/248/88',\
    tag:'PCI/6.5.2',\
    ctl:auditLogParts=+E,\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.anomaly_score_pl2=+%{tx.critical_anomaly_score}'"

#
# -=[ Rule 932200 ]=-
#
# Block RCE Bypass using different techniques:
# - uninitialized variables (https://www.secjuice.com/web-application-firewall-waf-evasion/)
# - string concatenations (https://medium.com/secjuice/web-application-firewall-waf-evasion-techniques-2-125995f3e7b0)
# - globbing patterns (https://medium.com/secjuice/waf-evasion-techniques-718026d693d8)
#
# Examples:
# - foo;cat$u+/etc$u/passwd
# - bar;cd+/etc;/bin$u/ca*+passwd
# - foo;ca\t+/et\c/pa\s\swd
# - foo;c'at'+/etc/pa's'swd
# - foo;c$@at+/et$@c/pas$@swd
# - foo;c$!at+/et$!c/pas$!swd
# - foo;c$*at+/et$*c/pas$*swd
# - foo;c$?at+/et$?c/pas$?swd
# - foo;c$-at+/et$-c/pas$-swd
# - foo;c$_at+/et$_c/pas$_swd
# - foo;c$$at+/et$$c/pas$$swd
#
# Regex notes: https://regex101.com/r/V6wrCO/1
#
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "@rx (?:[*?`\x5c'][^/\n]+/|\$[({\[#@!?*\-_$a-zA-Z0-9]|/[^/]+?[*?`\x5c'])" \
    "id:932200,\
    phase:2,\
    block,\
    capture,\
    t:none,t:lowercase,t:urlDecodeUni,\
    msg:'RCE Bypass Technique',\
    logdata:'Matched Data: %{TX.0} found within %{TX.932200_MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-multi',\
    tag:'platform-multi',\
    tag:'attack-rce',\
    tag:'paranoia-level/2',\
    tag:'OWASP_CRS',\
    tag:'capec/1000/152/248/88',\
    tag:'PCI/6.5.2',\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.932200_matched_var_name=%{matched_var_name}',\
    chain"
    SecRule MATCHED_VAR "@rx /" "t:none,t:urlDecodeUni,chain"
        SecRule MATCHED_VAR "@rx \s" "t:none,t:urlDecodeUni,\
            setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
            setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'"


# [ Sqlite System Command Execution ]
#
# This rule prevents execution of SQLite CLI commands like .system and .shell
#
# You can find a vulnerable script and a sample payload here:
# https://github.com/qxxxb/ctf/tree/master/2021/zer0pts_ctf/baby_sqli
#
# List of sqlite3 CLI commands:
# https://sqlite.org/cli.html
#
# Regular expression generated from util/regexp-assemble/data/932210.data.
# To update the regular expression run the following shell script
# (consult util/regexp-assemble/README.md for details):
#   util/regexp-assemble/regexp-assemble.py update 932210
#
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "@rx ;\s*\.\s*(?:s(?:e(?:parator|lftest)|c(?:anstats|hema)|h(?:a3sum|ell|ow)|ystem|tats|ave)|t(?:estc(?:ase|trl)|ime(?:out|r)|ables|race)|e(?:x(?:p(?:lain|ert)|cel|it)|cho|qp)|p(?:r(?:o(?:gress|mpt)|int)|arameter)|d(?:b(?:config|info)|atabases|ump)|c(?:h(?:anges|eck)|lone|d)|i(?:mpo(?:ster|rt)|ndexes)|l(?:i(?:mi|n)t|o(?:ad|g))|b(?:a(?:ckup|il)|inary)|f(?:ullschema|ilectrl)|vfs(?:info|list|name)|re(?:cover|store|ad)|o(?:utput|nce|pen)|(?:nullvalu|mod)e|a(?:rchive|uth)|he(?:aders|lp)|width|quit)" \
    "id:932210,\
    phase:2,\
    block,\
    t:none,t:escapeSeqDecode,t:compressWhitespace,\
    msg:'Remote Command Execution: SQLite System Command Execution',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-shell',\
    tag:'platform-unix',\
    tag:'attack-rce',\
    tag:'paranoia-level/2',\
    tag:'OWASP_CRS',\
    tag:'capec/1000/152/248/88',\
    tag:'PCI/6.5.2',\
    ctl:auditLogParts=+E,\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'"

# -=[ SMTP/IMAP/POP3 Command Execution ]=-
#
# Rationale
# =========
#
# The rules for email command execution are based on the RFCs for each protocol.
# Some of the commands have optional and/or additional parameters, so we tried to be
# precise to avoid as many FP in PL2 rules.
# For those commands that resemble common English words, and may pose a higher risk of false positives,
# they have been split off to a sibling rule in PL3.

# =[ SMTP Command Execution ]=
#
# This rule prevents execution of SMTP related system commands.
#
# List of SMTP commands: from rfc 5321 (https://www.rfc-editor.org/rfc/rfc5321)
#
# Regular expression generated from util/regexp-assemble/data/932300.data.
# To update the regular expression run the following shell script
# (consult util/regexp-assemble/README.md for details):
#   util/regexp-assemble/regexp-assemble.py update 932300
#
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "@rx (?is)\r\n.*?\b(?:AUTH [A-Z0-9-_]{1,20} (?:=|(?:[\w+/]{4})*(?:[\w+/]{2}==|[\w+/]{3}=))|R(?:CPT TO:(?:<.{1,64}@.{1,255}>|(?: ))?<.{1,64}>|SET\b)|VRFY (?:.{1,64} <.{1,64}@.{1,255}>|.{1,64}@.{1,255})|E(?:HLO [a-zA-Z-\.]{1,255}|XPN (?:.{1,64}))|MAIL FROM:<.{1,64}@.{1,255}>|HELO [a-zA-Z-\.]{1,255}|NOOP\b(?: .{1,255})?|STARTTLS\b)" \
    "id:932300,\
    phase:2,\
    block,\
    t:none,t:escapeSeqDecode,\
    msg:'Remote Command Execution: SMTP Command Execution',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'platform-multi',\
    tag:'attack-rce',\
    tag:'paranoia-level/2',\
    tag:'OWASP_CRS',\
    tag:'capec/137/134',\
    tag:'PCI/6.5.2',\
    ctl:auditLogParts=+E,\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.anomaly_score_pl2=+%{tx.critical_anomaly_score}'"

# =[ IMAP Command Execution ]=
#
# This rule prevents execution of IMAP4 related system commands.
#
# List of IMAP4 commands: from rfc 3501 (https://datatracker.ietf.org/doc/html/rfc3501#section-9)
#
# Note: Mailbox International Naming Convention uses UTF-7, so it was left out explicitly.
#
# Regular expression generated from util/regexp-assemble/data/932310.data.
# To update the regular expression run the following shell script
# (consult util/regexp-assemble/README.md for details):
#   util/regexp-assemble/regexp-assemble.py update 932310
#
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "@rx (?is)\r\n\w{1,50}\b[ ](?:A(?:PPEND (?:[\w\"\.\-\x5c\/%\*&#]+)?(?: \((?:[a-z\x5c\ ])+\))?(?: \"?\d{1,2}-\w{3}-\d{4} \d{2}:\d{2}:\d{2} [+-]\d{4}\"?)? \{\d{1,20}\+?}|UTHENTICATE [a-z0-9-_]{1,20}\r\n)|S(?:TATUS (?:[\w\"\.\-\x5c\/%\*&]+)? \((?:UNSEEN|UIDNEXT|MESSAGES|UIDVALIDITY|RECENT| )+\)|ETACL (?:[\w\"\.\-\x5c\/%\*&]+)? [+-][lrswipckdxtea]+?)|L(?:SUB (?:[\w\"~\/\*#\.]+)? (?:[\w\"\.\x5c\/%\*&]+)?|ISTRIGHTS (?:[\w\"\.\-\x5c\/%\*&]+)?)|(?:(?:DELETE|GET)ACL|MYRIGHTS) (?:[\w\"\.\-\x5c\/%\*&]+)?|UID (?:COPY|FETCH|STORE) (?:[0-9,:\*]+)?)" \
    "id:932310,\
    phase:2,\
    block,\
    t:none,t:escapeSeqDecode,\
    msg:'Remote Command Execution: IMAP Command Execution',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'platform-multi',\
    tag:'attack-rce',\
    tag:'paranoia-level/2',\
    tag:'OWASP_CRS',\
    tag:'capec/137/134',\
    tag:'PCI/6.5.2',\
    ctl:auditLogParts=+E,\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.anomaly_score_pl2=+%{tx.critical_anomaly_score}'"

# =[ POP3 Command Execution ]=
#
# This rule prevents execution of POP3 related system commands.
#
# List of POP3 commands:
# - from rfc 1939 (https://www.rfc-editor.org/rfc/rfc1939#appendix-B)
# - extensions from rfc 2449 (https://www.rfc-editor.org/rfc/rfc2449)
#
# These commands all have some kind of parameter that makes them a good PL2 target.
#
# Regular expression generated from util/regexp-assemble/data/932320.data.
# To update the regular expression run the following shell script
# (consult util/regexp-assemble/README.md for details):
#   util/regexp-assemble/regexp-assemble.py update 932320
#
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "@rx (?si)\r\n.*?\b(?:A(?:UTH [A-Z0-9-_]{1,20} (?:=|(?:[\w+/]{4})*(?:[\w+/]{2}==|[\w+/]{3}=))|POP [\w]+ [a-f0-9]{32})|(?:TOP \d+|LIST)(?: \d+)?|U(?:IDL(?: \d+)?|SER .+?)|(?:DELE|RETR) \d+?|PASS .+?)" \
    "id:932320,\
    phase:2,\
    block,\
    t:none,t:escapeSeqDecode,\
    msg:'Remote Command Execution: POP3 Command Execution',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'platform-multi',\
    tag:'attack-rce',\
    tag:'paranoia-level/2',\
    tag:'OWASP_CRS',\
    tag:'capec/137/134',\
    tag:'PCI/6.5.2',\
    ctl:auditLogParts=+E,\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.anomaly_score_pl2=+%{tx.critical_anomaly_score}'"

# [ Unix direct remote command execution ]
#
# This rule is a stricter sibling of 932150.
# Detects cases of (direct) command injection at the start of a parameter that go beyond simple keywords.
# Example: x=pi``ng%20127.0.0.1
#
# Regular expression generated from util/regexp-assemble/data/932151.data.
# To update the regular expression run the following shell script
# (consult util/regexp-assemble/README.md for details):
#   util/regexp-assemble/regexp-assemble.py update 932151
#
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "@rx ^(?:ln\s+(?:-[Fhfinsv]|\/[\w-]+|[\w][\w-]*\s+(?:[\w-]+|\/[\w-]+))|find\s+(?:--?[\w]|\.\s|\.\.\/)|\w+(?:[$<>]\(.*\)|`.*`)\w*)" \
    "id:932151,\
    phase:2,\
    block,\
    capture,\
    t:none,\
    msg:'Remote Command Execution: Direct Unix Command Execution',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-shell',\
    tag:'platform-unix',\
    tag:'attack-rce',\
    tag:'paranoia-level/2',\
    tag:'OWASP_CRS',\
    tag:'capec/1000/152/248/88',\
    tag:'PCI/6.5.2',\
    ctl:auditLogParts=+E,\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'"


SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 3" "id:932015,phase:1,pass,nolog,skipAfter:END-REQUEST-932-APPLICATION-ATTACK-RCE"
SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 3" "id:932016,phase:2,pass,nolog,skipAfter:END-REQUEST-932-APPLICATION-ATTACK-RCE"
#
# -= Paranoia Level 3 =- (apply only when tx.detection_paranoia_level is sufficiently high: 3 or higher)
#

# Missing Unix commands have been added to a new word list i.e.
# util/regexp-assemble/data/932106.data
# These commands may have a higher risk of false positives.
# Therefore, they have been split off to a separate rule in PL3.
# For explanation of this rule, see rule 932100.
#
# Regular expression generated from util/regexp-assemble/data/932106.data.
# To update the regular expression run the following shell script
# (consult util/regexp-assemble/README.md for details):
#   util/regexp-assemble/regexp-assemble.py update 932106
#
# This rule is a stricter sibling of rule 932100.
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "@rx (?:[;\n\r`]|\$(?:\(?\(|{)|(?:\|)?\||\(\s*\)|[<>]\(|&?&|\{)\s*(?:(?:\w+=(?:[^\s]*|\$.*|\$.*|<.*|>.*|\'.*\'|\".*\")\s+|(?:\s*\(|!)\s*|\{|\$))*\s*(?:['\"])*(?:[\?\*\[\]\(\)\-\|+\w'\"\./\x5c]+/)?[\x5c'\"]*(?:(?:(?:a[\x5c'\"]*p[\x5c'\"]*t[\x5c'\"]*i[\x5c'\"]*t[\x5c'\"]*u[\x5c'\"]*d|u[\x5c'\"]*p[\x5c'\"]*2[\x5c'\"]*d[\x5c'\"]*a[\x5c'\"]*t)[\x5c'\"]*e|d[\x5c'\"]*n[\x5c'\"]*f|v[\x5c'\"]*i)[\x5c'\"]*(?:\s|<|>).*|p[\x5c'\"]*(?:a[\x5c'\"]*c[\x5c'\"]*m[\x5c'\"]*a[\x5c'\"]*n[\x5c'\"]*(?:\s|<|>).*|w[\x5c'\"]*d|s)|w[\x5c'\"]*(?:(?:\s|<|>).*|h[\x5c'\"]*o))\b" \
    "id:932106,\
    phase:2,\
    block,\
    capture,\
    t:none,\
    msg:'Remote Command Execution: Unix Command Injection',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-shell',\
    tag:'platform-unix',\
    tag:'attack-rce',\
    tag:'OWASP_CRS',\
    tag:'capec/1000/152/248/88',\
    tag:'PCI/6.5.2',\
    tag:'paranoia-level/3',\
    ctl:auditLogParts=+E,\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl3=+%{tx.critical_anomaly_score}'"

#
# -=[ Bypass Rule 930120 (wildcard) ]=-
#
# When Paranoia Level is set to 1 and 2, a Remote Command Execution
# could be exploited bypassing rule 930120 (OS File Access Attempt)
# by using wildcard characters.
#
# In some other cases, it could be bypassed even if the Paranoia Level is set to 3.
# Please, keep in mind that this rule could lead to many false positives.
#
# The following two blog posts explain the evasions this rule is designed to detect:
# - https://medium.com/secjuice/waf-evasion-techniques-718026d693d8
# - https://medium.com/secjuice/web-application-firewall-waf-evasion-techniques-2-125995f3e7b0

SecRule ARGS "@rx /(?:[?*]+[a-z/]+|[a-z/]+[?*]+)" \
    "id:932190,\
    phase:2,\
    block,\
    capture,\
    t:none,t:urlDecode,t:urlDecodeUni,t:normalizePath,t:cmdLine,\
    msg:'Remote Command Execution: Wildcard bypass technique attempt',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-shell',\
    tag:'platform-unix',\
    tag:'attack-rce',\
    tag:'OWASP_CRS',\
    tag:'capec/1000/152/248/88',\
    tag:'PCI/6.5.2',\
    tag:'paranoia-level/3',\
    ctl:auditLogParts=+E,\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl3=+%{tx.critical_anomaly_score}'"


# -=[ SMTP commands ]=-
#
# This rule prevents execution of SMTP related system commands.
#
# These commands may have a higher risk of false positives.
# For explanation of this rule, see above rule 932300.
#
# Rule 932301 is a stricter sibling of rule 932300.
#
# Regular expression generated from util/regexp-assemble/data/932301.data.
# To update the regular expression run the following shell script
# (consult util/regexp-assemble/README.md for details):
#   util/regexp-assemble/regexp-assemble.py update 932301
#
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "@rx (?s)\r\n.*?\b(?:HELP(?: .{1,255})?|DATA|QUIT)" \
    "id:932301,\
    phase:2,\
    block,\
    t:none,t:escapeSeqDecode,\
    msg:'Remote Command Execution: SMTP Command Execution',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'platform-multi',\
    tag:'attack-rce',\
    tag:'paranoia-level/3',\
    tag:'OWASP_CRS',\
    tag:'capec/137/134',\
    tag:'PCI/6.5.2',\
    ctl:auditLogParts=+E,\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl3=+%{tx.critical_anomaly_score}'"

# =[ IMAP4 Command Execution ]=
#
# This rule prevents execution of IMAP4 related system commands.
#
# These commands may have a higher risk of false positives.
# For explanation of this rule, see above rule 932310.
#
# Rule 932311 is a stricter sibling of rule 932310.
#
# Regular expression generated from util/regexp-assemble/data/932311.data.
# To update the regular expression run the following shell script
# (consult util/regexp-assemble/README.md for details):
#   util/regexp-assemble/regexp-assemble.py update 932311
#
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "@rx (?is)\r\n\w{1,50}\b[ ](?:S(?:E(?:ARCH(?: CHARSET [\w\-_\.]{1,40})? (?:(KEYWORD \x5c)?(?:ALL|ANSWERED|BCC|DELETED|DRAFT|FLAGGED|RECENT|SEEN|UNANSWERED|UNDELETED|UNDRAFT|UNFLAGGED|UNSEEN|NEW|OLD)|(?:TEXT .{1,255}|TO .{1,255}|UID [0-9,:\*]+?|UNKEYWORD (?:\x5c(Seen|Answered|Flagged|Deleted|Draft|Recent)))|(?:BEFORE|ON|SENTBEFORE|SENTON|SENTSINCE|SINCE) \"?\d{1,2}-\w{3}-\d{4}\"?|(?:OR .{1,255} .{1,255}|SMALLER \d{1,20}|SUBJECT .{1,255})|(?:(?:BODY|CC|FROM)|HEADER .{1,100}) .{1,255}|(?:LARGER \d{1,20}|NOT .{1,255}|[0-9,:\*]+))|LECT [\w\"\.\-\x5c\/%\*&#]+)|T(?:ORE [0-9,:\*]+? [+-]?FLAGS(?:\.SILENT)? (?:\(\x5c[a-z]{1,20}\))?|ARTTLS)|UBSCRIBE [\w\"\.\-\x5c\/%\*&#]+)|L(?:IST [\w\"~\-\x5c\/\*#\.]+? [\w\"\.\-\x5c\/%\*&#]+|OG(?:IN [a-z0-9-_\.\@]{1,40} .*?|OUT))|C(?:(?:OPY [0-9,:\*]+|REATE) [\w\"\.\-\x5c\/%\*&#]+|APABILITY|HECK|LOSE)|RENAME [\w\"\.\-\x5c\/%\*&#]+? [\w\"\.\-\x5c\/%\*&#]+|UN(?:SUBSCRIBE [\w\"\.\-\x5c\/%\*&#]+|AUTHENTICATE)|EX(?:AMINE [\w\"\.\-\x5c%\*&#]+|PUNGE)|DELETE [\w\"\.\-\x5c%\*&#]+|FETCH [0-9,:\*]+|NOOP)" \
    "id:932311,\
    phase:2,\
    block,\
    t:none,t:escapeSeqDecode,\
    msg:'Remote Command Execution: IMAP Command Execution',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'platform-multi',\
    tag:'attack-rce',\
    tag:'paranoia-level/3',\
    tag:'OWASP_CRS',\
    tag:'capec/137/134',\
    tag:'PCI/6.5.2',\
    ctl:auditLogParts=+E,\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl3=+%{tx.critical_anomaly_score}'"

# =[ POP3 Command Execution ]=
#
# This rule prevents execution of POP3 related system commands.
#
# These commands may have a higher risk of false positives.
# For explanation of this rule, see above rule 932320.
#
# Rule 932321 is a stricter sibling of rule 932320.
#
# Regular expression generated from util/regexp-assemble/data/932321.data.
# To update the regular expression run the following shell script
# (consult util/regexp-assemble/README.md for details):
#   util/regexp-assemble/regexp-assemble.py update 932321
#
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "@rx (?si)\r\n.*?\b(?:(?:QUI|RSE|STA)T|CAPA|NOOP)" \
    "id:932321,\
    phase:2,\
    block,\
    t:none,t:escapeSeqDecode,\
    msg:'Remote Command Execution: POP3 Command Execution',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'platform-multi',\
    tag:'attack-rce',\
    tag:'paranoia-level/3',\
    tag:'OWASP_CRS',\
    tag:'capec/137/134',\
    tag:'PCI/6.5.2',\
    ctl:auditLogParts=+E,\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl3=+%{tx.critical_anomaly_score}'"


# =[ Unix shell history invocation ]=
#
# This rule is a stricter sibling of 932330.
# Shell history can also be invoked by providing an absolute position: '!1' or by repeating the last command '!!'.
# The latter might seem harmless as you would expect that it already requires a successful exploitation, but it is a threat in disguise.
#
# Imagine the following requests:
#   GET /?rce=c
#   GET /?rce=!!!!
# The last request will invoke /usr/bin/cc, which is otherwise blocked by 932150.
#
# Neither !1 nor !! is necessarily valid speech, but blocking either of them is much more likely to cause false-positives than 932330.
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "@rx !(?:\d|!)" \
    "id:932331,\
    phase:2,\
    block,\
    t:none,\
    msg:'Remote Command Execution: Unix shell history invocation',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
    tag:'application-multi',\
    tag:'language-shell',\
    tag:'platform-unix',\
    tag:'attack-rce',\
    tag:'paranoia-level/3',\
    tag:'OWASP_CRS',\
    tag:'capec/1000/152/248/88',\
    tag:'PCI/6.5.2',\
    ctl:auditLogParts=+E,\
    ver:'OWASP_CRS/4.0.0-rc1',\
    severity:'CRITICAL',\
    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'"


SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 4" "id:932017,phase:1,pass,nolog,skipAfter:END-REQUEST-932-APPLICATION-ATTACK-RCE"
SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 4" "id:932018,phase:2,pass,nolog,skipAfter:END-REQUEST-932-APPLICATION-ATTACK-RCE"
#
# -= Paranoia Level 4 =- (apply only when tx.detection_paranoia_level is sufficiently high: 4 or higher)
#



#
# -= Paranoia Levels Finished =-
#
SecMarker "END-REQUEST-932-APPLICATION-ATTACK-RCE"
