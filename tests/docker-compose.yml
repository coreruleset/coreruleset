# Only one of these will be up at a time for now.
# Concurrency will be on the tests folder we have.

services:
  modsec2-apache:
    container_name: modsec2-apache
    image: owasp/modsecurity-crs:apache@sha256:36fc67d66f7761a6cb532c4855901a41792efa6e58303833c03aeed285c9c961 # pin v4.3.0
    # NOTE: The user used to run the container process is explicitly set to
    # 'root'. This fixes issues with permissions on the logging directories used
    # as bind mounts. This is done as *a convenience for running the CRS testing
    # setup only* and *should not be done in general!*
    user: root
    environment:
      ACCESSLOG: "/var/log/apache2/access.log"
      BACKEND: http://backend
      BLOCKING_PARANOIA: 4
      COMBINED_FILE_SIZES: "65535"
      CRS_ENABLE_TEST_MARKER: 1
      ERRORLOG: "/var/log/apache2/error.log"
      MAX_FILE_SIZE: "64100"
      MODSEC_AUDIT_LOG_FORMAT: Native
      MODSEC_AUDIT_LOG_TYPE: Serial
      MODSEC_AUDIT_LOG: "/var/log/apache2/modsec_audit.log"
      MODSEC_RESP_BODY_ACCESS: "On"
      MODSEC_RESP_BODY_MIMETYPE: "text/plain text/html text/xml application/json"
      MODSEC_RULE_ENGINE: DetectionOnly
      MODSEC_TMP_DIR: "/tmp"
      PORT: "8080"
      SERVERNAME: modsec2-apache
      VALIDATE_UTF8_ENCODING: 1
      ARG_LENGTH: 400
    volumes:
      - ./logs/modsec2-apache:/var/log/apache2:rw
      - ../rules:/opt/owasp-crs/rules:ro
      - ../plugins:/opt/owasp-crs/plugins:ro
      - ../crs-setup.conf.example:/etc/modsecurity.d/owasp-crs/crs-setup.conf.example
    entrypoint: ["/bin/sh", "-c", "/bin/cp /etc/modsecurity.d/owasp-crs/crs-setup.conf.example /etc/modsecurity.d/owasp-crs/crs-setup.conf && /docker-entrypoint.sh httpd-foreground"]
    ports:
      - "80:8080"
    depends_on:
      - backend


  modsec3-nginx:
    container_name: modsec3-nginx
    image: owasp/modsecurity-crs:nginx@sha256:44b6e45fdc9eb9fdd34bb62f91f51513a87116e1445222cff7f4018bed7d42eb # pin v4.3.0
    # NOTE: The user used to run the container process is explicitly set to
    # 'root'. This fixes issues with permissions on the logging directories used
    # as bind mounts. This is done as *a convenience for running the CRS testing
    # setup only* and *should not be done in general!*
    user: root
    environment:
      ACCESSLOG: "/var/log/nginx/access.log"
      BACKEND: http://backend
      BLOCKING_PARANOIA: 4
      COMBINED_FILE_SIZES: "65535"
      CRS_ENABLE_TEST_MARKER: 1
      ERRORLOG: "/var/log/nginx/error.log"
      LOGLEVEL: "info"
      MAX_FILE_SIZE: "64100"
      MODSEC_AUDIT_LOG_FORMAT: Native
      MODSEC_AUDIT_LOG_TYPE: Serial
      MODSEC_AUDIT_LOG: "/var/log/nginx/modsec_audit.log"
      MODSEC_RESP_BODY_ACCESS: "On"
      MODSEC_RESP_BODY_MIMETYPE: "text/plain text/html text/xml application/json"
      MODSEC_RULE_ENGINE: DetectionOnly
      PORT: "8080"
      SERVERNAME: modsec3-nginx
      VALIDATE_UTF8_ENCODING: 1
      ARG_LENGTH: 400
    volumes:
      - ./logs/modsec3-nginx:/var/log/nginx:rw
      - ../rules:/opt/owasp-crs/rules:ro
      - ../plugins:/opt/owasp-crs/plugins:ro
      - ../crs-setup.conf.example:/etc/modsecurity.d/owasp-crs/crs-setup.conf.example
    entrypoint: ["/bin/sh", "-c", "/bin/cp /etc/modsecurity.d/owasp-crs/crs-setup.conf.example /etc/modsecurity.d/owasp-crs/crs-setup.conf && /docker-entrypoint.sh nginx -g 'daemon off;'"]
    ports:
      - "80:8080"
    depends_on:
      - backend

  backend:
    image: ghcr.io/coreruleset/albedo:0.0.14
    command: ["--port", "80"]
