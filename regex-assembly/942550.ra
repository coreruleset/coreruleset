##! Please refer to the documentation at
##! https://coreruleset.org/docs/development/regex_assembly/.

##! Referring to https://claroty.com/team82/research/js-on-security-off-abusing-json-based-sql-to-bypass-waf
##! this rule tries to match the following payloads:
##!
##! PostgreSQL reference: https://www.postgresql.org/docs/current/functions-json.html
##! PostgreSQL: '{"b":2}'::jsonb <@ '{"a":1, "b":2}'::jsonb
##! PostgreSQL: '{"b":2}'::jsonb @> '{"a":1, "b":2}'::jsonb
##! PostgreSQL: '{"b":2}'::jsonb @ '{"a":1, "b":2}'::jsonb
##! PostgreSQL: '{"b":2}'::jsonb < '{"a":1, "b":2}'::jsonb
##! PostgreSQL: '{"b":2}'::jsonb > '{"a":1, "b":2}'::jsonb
##! PostgreSQL: '["a", "b"]'::jsonb - 1 → ["a"]
##! PostgreSQL: '["a", {"b":1}]'::jsonb #- '{1,b}' → ["a", {}]
##! PostgreSQL: '{"a":[1,2,3,4,5]}'::jsonb @? '$.a[*] ? (@ > 2)' → t
##! PostgreSQL: '{"a":[1,2,3,4,5]}'::jsonb @@ '$.a[*] > 2' → t
##! PostgreSQL: '[1, 2]'::jsonb || '3'::jsonb → [1, 2, 3]
##! PostgreSQL: '["a", "b", "c"]'::jsonb ?& array['a', 'b'] → t
##! PostgreSQL: '{"a":1, "b":2, "c":3}'::jsonb ?| array['b', 'd'] → t
##! PostgreSQL: '["a", "b", "c"]'::jsonb ? 'b' → t
##! PostgreSQL: '{"a": {"b": ["foo","bar"]}}'::json #>> '{a,b,1}' → bar
##! PostgreSQL: '{"a": {"b": ["foo","bar"]}}'::json #> '{a,b,1}' → "bar"

##! SQLite reference: https://www.sqlite.org/json1.html
##! SQLite: '{"a":2,"c":[4,5,{"f":7}]}' -> '$.c[2].f' = '7'
##! SQLite: '{"a":2,"c":[4,5,{"f":7}]}' ->> '$.c[2].f' = 7
##! SQLite: '{"a":2,"c":[4,5,{"f":7}]}' < '$.c[2].f' = 7
##! SQLite: '{"a":2,"c":[4,5,{"f":7}]}' > '$.c[2].f' = 7

##! MySQL reference: https://dev.mysql.com/doc/refman/8.4/en/json-function-reference.html
##! MySQL: JSON_EXTRACT('{"id": 14, "name": "Aztalan"}', '$.name') = 'Aztalan'
##! MySQL: SELECT id FROM users WHERE id=JsoN_EXTraCT/**/(/**/'  {"a":1}  '/**/,/**/' $.a '/**/);

##! This regex relies on the `removeWhitespace` transformation.

##!+ i

##!> define quotes [\"'`]
##!> define operators (?:@|@>|<@|@\?|@@|\?|\?&|\?\|#>|#>>|#-|->>|<|>|->|-)
##!> define json_starting_brackets [[{]
##!> define sqlite_path \$[.[]
##!> define something_except_json_ending_brackets [^}\]#]*
##!> define json_ending_brackets [\]}]+
##!> define sql_comment (/\*.*?\*/)?
##!> define non_greedy_jsonb (?:::{{sql_comment}}jsonb?)?

##!> assemble
  ##! SQLite + PostgreSQL
  {{quotes}}{{json_starting_brackets}}{{something_except_json_ending_brackets}}{{json_ending_brackets}}{{quotes}}
  {{operators}}{{quotes}}{{json_starting_brackets}}{{something_except_json_ending_brackets}}{{json_ending_brackets}}{{quotes}}
  {{operators}}{{quotes}}{{sqlite_path}}

  ##! MySQL
  \bjson_extract\b[^\(]*\([^)]*\)
##!<
